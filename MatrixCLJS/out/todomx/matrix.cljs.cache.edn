{:rename-macros {}, :renames {}, :externs {Error {}, window {alert {}}}, :use-macros {input tiltontec.tag.gen, fn-obs tiltontec.cell.observer, h1 tiltontec.tag.gen, p tiltontec.tag.gen, c-in tiltontec.cell.core, a tiltontec.tag.gen, dom-tag tiltontec.tag.gen, span tiltontec.tag.gen, mxi-find tiltontec.model.core, unbound tiltontec.cell.base, pln tiltontec.util.core, c?n tiltontec.cell.core, now tiltontec.util.core, ul tiltontec.tag.gen, button tiltontec.tag.gen, c?+ tiltontec.cell.core, on-evt! tiltontec.tag.gen, li tiltontec.tag.gen, *within-integrity* tiltontec.cell.base, md-get tiltontec.model.core, section tiltontec.tag.gen, md-reset! tiltontec.model.core, c?once tiltontec.cell.core, c?+n tiltontec.cell.core, header tiltontec.tag.gen, footer tiltontec.tag.gen, ia-type tiltontec.cell.base, div tiltontec.tag.gen, mxu-find-class tiltontec.model.core, c? tiltontec.cell.core, xor tiltontec.util.core, label tiltontec.tag.gen, mx-par tiltontec.model.core, kid-values-kids tiltontec.model.core}, :excludes #{}, :name todomx.matrix, :imports nil, :requires {tiltontec.cell.observer tiltontec.cell.observer, tiltontec.cell.base tiltontec.cell.base, md tiltontec.model.core, tiltontec.tag.html tiltontec.tag.html, tiltontec.util.core tiltontec.util.core, todomx.todo todomx.todo, r bide.core, tiltontec.cell.core tiltontec.cell.core, tiltontec.model.core tiltontec.model.core, pp cljs.pprint, cljs.pprint cljs.pprint, bide.core bide.core, str clojure.string, tiltontec.tag.gen tiltontec.tag.gen, clojure.string clojure.string}, :cljs.spec/speced-vars [], :uses {td-upsert todomx.todo, io-upsert tiltontec.tag.html, c-in tiltontec.cell.core, dom-tag tiltontec.tag.gen, td-delete! todomx.todo, mxi-find tiltontec.model.core, unbound tiltontec.cell.base, mxa-find-type tiltontec.tag.html, pln tiltontec.util.core, now tiltontec.util.core, td-toggle-completed! todomx.todo, mxa-find-tag tiltontec.tag.html, load-all todomx.todo, tagfo tiltontec.tag.html, tag-dom tiltontec.tag.html, make-todo todomx.todo, *within-integrity* tiltontec.cell.base, md-get tiltontec.model.core, td-title todomx.todo, md-reset! tiltontec.model.core, td-id todomx.todo, dom-has-class tiltontec.tag.html, to-html tiltontec.tag.html, ia-type tiltontec.cell.base, td-completed todomx.todo, mxu-find-class tiltontec.model.core, xor tiltontec.util.core, dom-ancestor-by-tag tiltontec.tag.html, mx-par tiltontec.model.core, io-read tiltontec.tag.html, io-clear-storage tiltontec.tag.html, td-created todomx.todo, kid-values-kids tiltontec.model.core}, :defs {todo-toggle-completed {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 189, :column 7, :end-line 189, :end-column 28, :arglists (quote ([event id]))}, :name todomx.matrix/todo-toggle-completed, :variadic false, :file "src/todomx/matrix.cljs", :end-column 28, :method-params ([event id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event id]))}, on-navigate {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 60, :column 7, :end-line 60, :end-column 18, :arglists (quote ([route params query]))}, :name todomx.matrix/on-navigate, :variadic false, :file "src/todomx/matrix.cljs", :end-column 18, :method-params ([route params query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 3, :fn-var true, :arglists (quote ([route params query]))}, dom {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 52, :column 7, :end-line 52, :end-column 10, :arglists (quote ([]))}, :name todomx.matrix/dom, :variadic false, :file "src/todomx/matrix.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, todo-process-on-enter {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 121, :column 7, :end-line 121, :end-column 28, :arglists (quote ([e]))}, :name todomx.matrix/todo-process-on-enter, :variadic false, :file "src/todomx/matrix.cljs", :end-column 28, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, mx-route {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 269, :column 7, :end-line 269, :end-column 15, :arglists (quote ([mx]))}, :name todomx.matrix/mx-route, :variadic false, :file "src/todomx/matrix.cljs", :end-column 15, :method-params ([mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mx]))}, todo-entry {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 115, :column 7, :end-line 115, :end-column 17, :arglists (quote ([]))}, :name todomx.matrix/todo-entry, :variadic false, :file "src/todomx/matrix.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mx-todo-items {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 287, :column 7, :end-line 287, :end-column 20, :arglists (quote ([] [mx])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [mx]), :arglists ([] [mx]), :arglists-meta (nil nil)}}, :name todomx.matrix/mx-todo-items, :variadic false, :file "src/todomx/matrix.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [mx]), :arglists ([] [mx]), :arglists-meta (nil nil)}, :method-params ([] [mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists ([] [mx])}, td-completed-toggle-all {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 152, :column 7, :end-line 152, :end-column 30, :arglists (quote ([event]))}, :name todomx.matrix/td-completed-toggle-all, :variadic false, :file "src/todomx/matrix.cljs", :end-column 30, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, toggle-all {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 135, :column 7, :end-line 135, :end-column 17, :arglists (quote ([]))}, :name todomx.matrix/toggle-all, :variadic false, :file "src/todomx/matrix.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, router {:name todomx.matrix/router, :file "src/todomx/matrix.cljs", :line 56, :column 1, :end-line 56, :end-column 12, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 56, :column 6, :end-line 56, :end-column 12}, :tag any}, event-to-mx {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 300, :column 7, :end-line 300, :end-column 18, :arglists (quote ([e]))}, :name todomx.matrix/event-to-mx, :variadic false, :file "src/todomx/matrix.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, todo-edit {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 210, :column 7, :end-line 210, :end-column 16, :arglists (quote ([e td-key]))}, :name todomx.matrix/todo-edit, :variadic false, :file "src/todomx/matrix.cljs", :end-column 16, :method-params ([e td-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e td-key]))}, matrix-build! {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 31, :column 7, :end-line 31, :end-column 20, :arglists (quote ([]))}, :name todomx.matrix/matrix-build!, :variadic false, :file "src/todomx/matrix.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mx-find-matrix {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 303, :column 7, :end-line 303, :end-column 21, :arglists (quote ([mx]))}, :name todomx.matrix/mx-find-matrix, :variadic false, :file "src/todomx/matrix.cljs", :end-column 21, :method-params ([mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mx]))}, todo-start-editing {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 194, :column 7, :end-line 194, :end-column 25, :arglists (quote ([e]))}, :name todomx.matrix/todo-start-editing, :variadic false, :file "src/todomx/matrix.cljs", :end-column 25, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, mx-todos {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 272, :column 7, :end-line 272, :end-column 15, :arglists (quote ([] [mx])), :doc "Given a node in the matrix, navigate to the root and read the todos. After\n  the matrix is initially loaded (say in an event handler), one can pass nil\n  and find the matrix in @matrix.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [mx]), :arglists ([] [mx]), :arglists-meta (nil nil)}}, :name todomx.matrix/mx-todos, :variadic false, :file "src/todomx/matrix.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [mx]), :arglists ([] [mx]), :arglists-meta (nil nil)}, :method-params ([] [mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists ([] [mx]), :doc "Given a node in the matrix, navigate to the root and read the todos. After\n  the matrix is initially loaded (say in an event handler), one can pass nil\n  and find the matrix in @matrix."}, delete-by-key {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 186, :column 7, :end-line 186, :end-column 20, :arglists (quote ([event id]))}, :name todomx.matrix/delete-by-key, :variadic false, :file "src/todomx/matrix.cljs", :end-column 20, :method-params ([event id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event id]))}, todo-list-item {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 159, :column 7, :end-line 159, :end-column 21, :arglists (quote ([me td]))}, :name todomx.matrix/todo-list-item, :variadic false, :file "src/todomx/matrix.cljs", :end-column 21, :method-params ([me td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 2, :fn-var true, :arglists (quote ([me td]))}, matrix {:name todomx.matrix/matrix, :file "src/todomx/matrix.cljs", :line 24, :column 1, :end-line 24, :end-column 12, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 24, :column 6, :end-line 24, :end-column 12}, :doc "matrix-build! will populate this with the root of the application matrix.", :tag any}, clear-completed {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 263, :column 7, :end-line 263, :end-column 22, :arglists (quote ([e]))}, :name todomx.matrix/clear-completed, :variadic false, :file "src/todomx/matrix.cljs", :end-column 22, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, dashboard-footer {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 241, :column 7, :end-line 241, :end-column 23, :arglists (quote ([]))}, :name todomx.matrix/dashboard-footer, :variadic false, :file "src/todomx/matrix.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mx-todo-lookup {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 294, :column 7, :end-line 294, :end-column 21, :arglists (quote ([id] [id mx])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([id] [id mx]), :arglists ([id] [id mx]), :arglists-meta (nil nil)}}, :name todomx.matrix/mx-todo-lookup, :variadic false, :file "src/todomx/matrix.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([id] [id mx]), :arglists ([id] [id mx]), :arglists-meta (nil nil)}, :method-params ([id] [id mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 294, :end-line 294, :max-fixed-arity 2, :fn-var true, :arglists ([id] [id mx])}, landing-page {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 79, :column 7, :end-line 79, :end-column 19, :arglists (quote ([]))}, :name todomx.matrix/landing-page, :variadic false, :file "src/todomx/matrix.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-router {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 64, :column 7, :end-line 64, :end-column 19, :arglists (quote ([]))}, :name todomx.matrix/start-router, :variadic false, :file "src/todomx/matrix.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {pp cljs.pprint, cljs.pprint cljs.pprint, tiltontec.cell.core tiltontec.cell.core, tiltontec.cell.observer tiltontec.cell.observer, tiltontec.tag.gen tiltontec.tag.gen}, :cljs.analyzer/constants {:seen #{sort-by input h1 :selector :onblur clojure.core/assert me :Completed todomx.matrix/todo-toggle-completed = :todos :empty? :selected p a :kid-values :placeholder :All span :items-completed todomx.matrix/todo-process-on-enter :kid-key md/with-par :content :default when-let mx-route unbound :completed :rule remove :value todo-entry let mx-todo-items :onclick :onkeydown :obs ul toggle-all todomx.matrix/todo-edit :todomx.matrix/todoApp :onkeypress :route :items-raw rte :Active if button :ignore on-evt! :title li or :input-type md-get td td-title todomx.matrix/delete-by-key section mx-todos :for zero? :uncomplete some nil? pp/cl-format todomx.matrix/td-completed-toggle-all td-id p1__9446# fn* route :hidden :id :class todo-list-item :autofocus clojure.core/deref header :checked tiltontec.cell.base/without-c-dependency todomx.matrix/clear-completed todomx.todo/todo-list todomx.matrix/todo-start-editing :code :todo div cond :display :action for :ondblclick td-completed :complete dashboard-footer cache c? xor filter :kid-factory :items landing-page label case :input? mx-par count io-read :on-navigate td-created complement :href :dom tiltontec.model.core/the-kids kid-values-kids :items-active}, :order [:todomx.matrix/todoApp :route :obs :code tiltontec.cell.base/without-c-dependency or io-read :input? :value :rule :todos todomx.todo/todo-list :dom md/with-par me landing-page :All :Active :Completed :default :on-navigate :ignore :class clojure.core/assert tiltontec.model.core/the-kids header h1 todo-entry section :hidden c? md-get mx-todos :empty? toggle-all ul :kid-values :kid-key :kid-factory when-let rte mx-route sort-by td-created case :items :items-completed :items-active fn* p1__9446# :todo todo-list-item kid-values-kids cache dashboard-footer p :autofocus :placeholder :onkeypress todomx.matrix/todo-process-on-enter :items-raw :title :action if some complement td-completed mx-todo-items :complete :uncomplete input :id :input-type :checked = mx-par label :for :onclick on-evt! todomx.matrix/td-completed-toggle-all :completed :display td let route cond nil? unbound xor div todomx.matrix/todo-toggle-completed td-id :ondblclick todomx.matrix/todo-start-editing td-title button todomx.matrix/delete-by-key :onblur :onkeydown todomx.matrix/todo-edit span :content pp/cl-format count remove for li a :href :selector :selected clojure.core/deref zero? filter todomx.matrix/clear-completed]}, :doc nil}