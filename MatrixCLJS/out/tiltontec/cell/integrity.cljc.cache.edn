{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {fifo-add tiltontec.util.core, c-stopped tiltontec.cell.base, caller-ensure tiltontec.cell.base, cl-find tiltontec.util.core, pcell tiltontec.cell.base, c-optimized-away? tiltontec.cell.base, un-stopped tiltontec.cell.base, pln tiltontec.util.core, *defer-changes* tiltontec.cell.base, c-pulse tiltontec.cell.base, wtrx tiltontec.util.base, +pulse+ tiltontec.cell.base, +client-q-handler+ tiltontec.cell.base, fifo-pop tiltontec.util.core, *within-integrity* tiltontec.cell.base, err tiltontec.util.core, fifo-peek tiltontec.util.core, ensure-vec tiltontec.util.core, trx tiltontec.util.base, *depender* tiltontec.cell.base, prog1 tiltontec.util.base}, :excludes #{}, :name tiltontec.cell.integrity, :imports nil, :requires {tiltontec.util.base tiltontec.util.base, tiltontec.util.core tiltontec.util.core, tiltontec.cell.base tiltontec.cell.base}, :cljs.spec/speced-vars [], :uses {fifo-add tiltontec.util.core, c-stopped tiltontec.cell.base, caller-ensure tiltontec.cell.base, cl-find tiltontec.util.core, c-optimized-away? tiltontec.cell.base, pln tiltontec.util.core, *defer-changes* tiltontec.cell.base, c-pulse tiltontec.cell.base, +pulse+ tiltontec.cell.base, +client-q-handler+ tiltontec.cell.base, fifo-pop tiltontec.util.core, *within-integrity* tiltontec.cell.base, err tiltontec.util.core, fifo-peek tiltontec.util.core, ensure-vec tiltontec.util.core, *depender* tiltontec.cell.base}, :defs {call-with-integrity {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 147, :column 7, :end-line 147, :end-column 26, :arglists (quote ([opcode defer-info action]))}, :name tiltontec.cell.integrity/call-with-integrity, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 26, :method-params ([opcode defer-info action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 3, :fn-var true, :arglists (quote ([opcode defer-info action]))}, +ufb-opcodes+ {:name tiltontec.cell.integrity/+ufb-opcodes+, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 45, :column 1, :end-line 45, :end-column 19, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 45, :column 6, :end-line 45, :end-column 19}, :tag cljs.core/IVector}, ufb-queue {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 58, :column 7, :end-line 58, :end-column 16, :arglists (quote ([opcode]))}, :name tiltontec.cell.integrity/ufb-queue, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 16, :method-params ([opcode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opcode]))}, c-current? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([c]))}, :name tiltontec.cell.integrity/c-current?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 17, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, *one-pulse?* {:name tiltontec.cell.integrity/*one-pulse?*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 21, :column 1, :end-line 21, :end-column 28, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 21, :column 16, :end-line 21, :end-column 28, :dynamic true}, :tag boolean}, finish-business {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 92, :column 7, :end-line 92, :end-column 22, :arglists (quote ([]))}, :name tiltontec.cell.integrity/finish-business, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *dp-log* {:name tiltontec.cell.integrity/*dp-log*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 23, :column 1, :end-line 23, :end-column 24, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 23, :column 16, :end-line 23, :end-column 24, :dynamic true}, :tag boolean}, ufb-assert-q-empty {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 69, :column 7, :end-line 69, :end-column 25, :arglists (quote ([opcode]))}, :name tiltontec.cell.integrity/ufb-assert-q-empty, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 25, :method-params ([opcode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opcode]))}, with-integrity {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 129, :column 11, :end-line 129, :end-column 25, :macro true, :arglists (quote ([[opcode info] & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [opcode info] body)], :arglists ([&form &env [opcode info] & body]), :arglists-meta (nil)}}, :name tiltontec.cell.integrity/with-integrity, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [opcode info] body)], :arglists ([&form &env [opcode info] & body]), :arglists-meta (nil)}, :method-params [(&form &env [opcode info] body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 129, :macro true, :end-line 129, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env [opcode info] & body])}, with-cc {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 136, :column 11, :end-line 136, :end-column 18, :macro true, :arglists (quote ([id &body body]))}, :name tiltontec.cell.integrity/with-cc, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 18, :method-params ([&form &env id &body body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :macro true, :end-line 136, :max-fixed-arity 5, :fn-var false, :arglists (quote ([id &body body]))}, *ufb-do-q* {:name tiltontec.cell.integrity/*ufb-do-q*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 80, :column 1, :end-line 80, :end-column 26, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 80, :column 16, :end-line 80, :end-column 26, :dynamic true}, :tag clj-nil}, data-pulse-next {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 25, :column 7, :end-line 25, :end-column 22, :arglists (quote ([] [pulse-info])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [pulse-info]), :arglists ([] [pulse-info]), :arglists-meta (nil nil)}}, :name tiltontec.cell.integrity/data-pulse-next, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [pulse-info]), :arglists ([] [pulse-info]), :arglists-meta (nil nil)}, :method-params ([] [pulse-info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists ([] [pulse-info])}, ufb-do {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 82, :column 7, :end-line 82, :end-column 13, :arglists (quote ([opcode] [q opcode])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([opcode] [q opcode]), :arglists ([opcode] [q opcode]), :arglists-meta (nil nil)}}, :name tiltontec.cell.integrity/ufb-do, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([opcode] [q opcode]), :arglists ([opcode] [q opcode]), :arglists-meta (nil nil)}, :method-params ([opcode] [q opcode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists ([opcode] [q opcode])}, ufb-add {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 66, :column 7, :end-line 66, :end-column 14, :arglists (quote ([opcode continuation]))}, :name tiltontec.cell.integrity/ufb-add, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 14, :method-params ([opcode continuation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([opcode continuation]))}, ufb-queue-ensure {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 62, :column 7, :end-line 62, :end-column 23, :arglists (quote ([opcode]))}, :name tiltontec.cell.integrity/ufb-queue-ensure, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 23, :method-params ([opcode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opcode]))}, without-integrity {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 140, :column 11, :end-line 140, :end-column 28, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.integrity/without-integrity, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 140, :macro true, :end-line 140, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c-pulse-update {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 36, :column 7, :end-line 36, :end-column 21, :arglists (quote ([c key]))}, :name tiltontec.cell.integrity/c-pulse-update, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :end-column 21, :method-params ([c key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c key]))}, unfin-biz {:name tiltontec.cell.integrity/unfin-biz, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 51, :column 1, :end-line 51, :end-column 15, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/integrity.cljc", :line 51, :column 6, :end-line 51, :end-column 15}, :tag any}}, :cljs.spec/registry-ref [], :require-macros {tiltontec.util.base tiltontec.util.base, tiltontec.cell.base tiltontec.cell.base}, :cljs.analyzer/constants {:seen #{:cwi-sees-stop!!!!!!!!!!! :defers :def-state-chg cljs.core/binding :ephemeral-reset :else defer-info :awaken tiltontec.cell.base/*defer-changes* :deferred-state-change :client tiltontec.cell.integrity/call-with-integrity opcode :anon :re-handling-clients!!!! :tell-dependents tiltontec.cell.integrity/*call-stack* :pulse cljs.core/fn :deferred-to-ufb-1 tiltontec.cell.base/*within-integrity* :ufb-do-yep tiltontec.cell.integrity/with-integrity :cwi quote :change :integrity-ok :handle-clients :handle-clients!!!!!}, :order [:anon :pulse :tell-dependents :awaken :client :ephemeral-reset :change :ufb-do-yep :handle-clients :handle-clients!!!!! :re-handling-clients!!!! :deferred-state-change :def-state-chg tiltontec.cell.integrity/call-with-integrity cljs.core/fn opcode defer-info tiltontec.cell.integrity/with-integrity cljs.core/binding tiltontec.cell.base/*within-integrity* tiltontec.cell.base/*defer-changes* tiltontec.cell.integrity/*call-stack* quote :cwi-sees-stop!!!!!!!!!!! :deferred-to-ufb-1 :cwi :defers :else :integrity-ok]}, :doc nil}