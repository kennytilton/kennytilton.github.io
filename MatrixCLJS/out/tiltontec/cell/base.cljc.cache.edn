{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {is cljs.test, b-when tiltontec.util.base, deftest cljs.test, def-rmap-slots tiltontec.util.base, prog1 tiltontec.util.base}, :excludes #{}, :name tiltontec.cell.base, :imports nil, :requires {utm tiltontec.util.base, tiltontec.util.base tiltontec.util.base, cljs.test cljs.test, ut tiltontec.util.core, tiltontec.util.core tiltontec.util.core}, :cljs.spec/speced-vars [], :uses {fifo-add tiltontec.util.core, set-ify tiltontec.util.core, wtrx-test tiltontec.util.core, cl-find tiltontec.util.core, any-ref? tiltontec.util.core, ia-ref tiltontec.util.core, fifo-pop tiltontec.util.core, err tiltontec.util.core, fifo-empty? tiltontec.util.core, fifo-peek tiltontec.util.core, fifo-data tiltontec.util.core, rmap-setf tiltontec.util.core, make-fifo-queue tiltontec.util.core}, :defs {c-md-name {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 155, :column 7, :end-line 155, :end-column 16, :arglists (quote ([c]))}, :name tiltontec.cell.base/c-md-name, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 16, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, c-stopped {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 86, :column 7, :end-line 86, :end-column 16, :arglists (quote ([]))}, :name tiltontec.cell.base/c-stopped, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, c-stopper {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 76, :column 7, :end-line 76, :end-column 16, :arglists (quote ([why]))}, :name tiltontec.cell.base/c-stopper, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 16, :method-params ([why]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([why]))}, caller-ensure {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 179, :column 7, :end-line 179, :end-column 20, :arglists (quote ([used new-caller]))}, :name tiltontec.cell.base/caller-ensure, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 20, :method-params ([used new-caller]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 2, :fn-var true, :arglists (quote ([used new-caller]))}, *not-to-be* {:name tiltontec.cell.base/*not-to-be*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 44, :column 1, :end-line 44, :end-column 27, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 44, :column 16, :end-line 44, :end-column 27, :dynamic true}, :tag boolean}, c-break {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 104, :column 7, :end-line 104, :end-column 14, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name tiltontec.cell.base/c-break, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, *unfinished-business* {:name tiltontec.cell.base/*unfinished-business*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 45, :column 1, :end-line 45, :end-column 37, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 45, :column 16, :end-line 45, :end-column 37, :dynamic true}, :tag clj-nil}, caller-drop {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 183, :column 7, :end-line 183, :end-column 18, :arglists (quote ([used caller]))}, :name tiltontec.cell.base/caller-drop, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 18, :method-params ([used caller]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 2, :fn-var true, :arglists (quote ([used caller]))}, c-input? {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-input?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-synaptic? {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-synaptic?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, pcell {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 55, :column 11, :end-line 55, :end-column 16, :macro true, :arglists (quote ([tag c]))}, :name tiltontec.cell.base/pcell, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 16, :method-params ([&form &env tag c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :macro true, :end-line 55, :max-fixed-arity 4, :fn-var false, :arglists (quote ([tag c]))}, c-warn {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 108, :column 7, :end-line 108, :end-column 13, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name tiltontec.cell.base/c-warn, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, c-value-state {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 164, :column 7, :end-line 164, :end-column 20, :arglists (quote ([rc]))}, :name tiltontec.cell.base/c-value-state, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 20, :method-params ([rc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rc]))}, c-users {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-users, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, +c-debug+ {:name tiltontec.cell.base/+c-debug+, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 52, :column 1, :end-line 52, :end-column 15, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 52, :column 6, :end-line 52, :end-column 15}, :tag any}, c-optimized-away? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 146, :column 7, :end-line 146, :end-column 24, :arglists (quote ([c]))}, :name tiltontec.cell.base/c-optimized-away?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 24, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, un-stopped {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 89, :column 11, :end-line 89, :end-column 21, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.base/un-stopped, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 89, :macro true, :end-line 89, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, unbound {:name tiltontec.cell.base/unbound, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 41, :column 1, :end-line 41, :end-column 17, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 41, :column 10, :end-line 41, :end-column 17}, :tag any}, c-optimize {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-optimize, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-valid? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 174, :column 7, :end-line 174, :end-column 15, :arglists (quote ([rc]))}, :name tiltontec.cell.base/c-valid?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 15, :method-params ([rc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rc]))}, *finbiz-id* {:name tiltontec.cell.base/*finbiz-id*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 49, :column 1, :end-line 49, :end-column 27, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 49, :column 16, :end-line 49, :end-column 27, :dynamic true}, :tag number}, *causation* {:name tiltontec.cell.base/*causation*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 28, :column 1, :end-line 28, :end-column 27, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 28, :column 16, :end-line 28, :end-column 27, :dynamic true}, :tag cljs.core/IList}, *defer-changes* {:name tiltontec.cell.base/*defer-changes*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 37, :column 1, :end-line 37, :end-column 31, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 37, :column 16, :end-line 37, :end-column 31, :dynamic true}, :tag boolean}, c-pulse {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-pulse, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, +pulse+ {:name tiltontec.cell.base/+pulse+, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 21, :column 1, :end-line 21, :end-column 13, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 21, :column 6, :end-line 21, :end-column 13}, :tag any}, c-pulse-last-changed {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-pulse-last-changed, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-slots {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 194, :column 7, :end-line 194, :end-column 14, :arglists (quote ([c k]))}, :name tiltontec.cell.base/c-slots, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 14, :method-params ([c k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c k]))}, uncurrent {:name tiltontec.cell.base/uncurrent, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 42, :column 1, :end-line 42, :end-column 19, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 42, :column 10, :end-line 42, :end-column 19}, :tag any}, +cause {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 71, :column 7, :end-line 71, :end-column 13, :arglists (quote ([]))}, :name tiltontec.cell.base/+cause, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, +stop+ {:name tiltontec.cell.base/+stop+, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 53, :column 1, :end-line 53, :end-column 22, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 53, :column 16, :end-line 53, :end-column 22, :dynamic true}, :tag any}, md-ref? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 200, :column 7, :end-line 200, :end-column 14, :arglists (quote ([x]))}, :name tiltontec.cell.base/md-ref?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, +client-q-handler+ {:name tiltontec.cell.base/+client-q-handler+, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 38, :column 1, :end-line 38, :end-column 24, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 38, :column 6, :end-line 38, :end-column 24}, :tag any}, c-value {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 139, :column 7, :end-line 139, :end-column 14, :arglists (quote ([c]))}, :name tiltontec.cell.base/c-value, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 14, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, *within-integrity* {:name tiltontec.cell.base/*within-integrity*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 46, :column 1, :end-line 46, :end-column 34, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 46, :column 16, :end-line 46, :end-column 34, :dynamic true}, :tag boolean}, ustack$ {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 93, :column 7, :end-line 93, :end-column 14, :arglists (quote ([tag]))}, :name tiltontec.cell.base/ustack$, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 14, :method-params ([tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tag]))}, mdead? {:name tiltontec.cell.base/mdead?, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 208, :column 1, :end-line 208, :end-column 17, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 208, :column 11, :end-line 208, :end-column 17}, :tag cljs.core/MultiFn}, c-callers {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-callers, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-ephemeral? {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-ephemeral?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-stop {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 81, :column 7, :end-line 81, :end-column 13, :arglists (quote ([] [why])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [why]), :arglists ([] [why]), :arglists-meta (nil nil)}}, :name tiltontec.cell.base/c-stop, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [why]), :arglists ([] [why]), :arglists-meta (nil nil)}, :method-params ([] [why]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists ([] [why])}, ia-type? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 125, :column 7, :end-line 125, :end-column 15, :arglists (quote ([it typ]))}, :name tiltontec.cell.base/ia-type?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 15, :method-params ([it typ]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([it typ]))}, c-ref? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 131, :column 7, :end-line 131, :end-column 13, :arglists (quote ([x]))}, :name tiltontec.cell.base/c-ref?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, +c-stopper+ {:name tiltontec.cell.base/+c-stopper+, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 79, :column 1, :end-line 79, :end-column 17, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 79, :column 6, :end-line 79, :end-column 17}, :tag any}, cells-init {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([]))}, :name tiltontec.cell.base/cells-init, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, c-model {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 152, :column 7, :end-line 152, :end-column 14, :arglists (quote ([rc]))}, :name tiltontec.cell.base/c-model, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 14, :method-params ([rc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rc]))}, c-pulse-observed {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-pulse-observed, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-assert {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 96, :column 7, :end-line 96, :end-column 15, :arglists (quote ([assertion] [assertion fmt$ & fmt-args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([assertion]), :arglists ([assertion] [assertion fmt$ & fmt-args]), :arglists-meta (nil nil)}}, :name tiltontec.cell.base/c-assert, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([assertion]), :arglists ([assertion] [assertion fmt$ & fmt-args]), :arglists-meta (nil nil)}, :method-params ([assertion]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists ([assertion] [assertion fmt$ & fmt-args])}, ia-type {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 118, :column 7, :end-line 118, :end-column 14, :arglists (quote ([it]))}, :name tiltontec.cell.base/ia-type, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 14, :method-params ([it]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([it]))}, c-slot {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-slot, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-rule {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-rule, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, unlink-from-callers {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 187, :column 7, :end-line 187, :end-column 26, :arglists (quote ([c]))}, :name tiltontec.cell.base/unlink-from-callers, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 26, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, c-formula? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 128, :column 7, :end-line 128, :end-column 17, :arglists (quote ([c]))}, :name tiltontec.cell.base/c-formula?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 17, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, c-me {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-me, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-lazy {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-lazy, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, c-slot-name {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 161, :column 7, :end-line 161, :end-column 18, :arglists (quote ([rc]))}, :name tiltontec.cell.base/c-slot-name, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 18, :method-params ([rc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rc]))}, md-slot-owning? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 220, :column 7, :end-line 220, :end-column 22, :arglists (quote ([class-name slot-name]))}, :name tiltontec.cell.base/md-slot-owning?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 22, :method-params ([class-name slot-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 2, :fn-var true, :arglists (quote ([class-name slot-name]))}, cells-reset {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 60, :column 7, :end-line 60, :end-column 18, :arglists (quote ([] [options])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [options]), :arglists ([] [options]), :arglists-meta (nil nil)}}, :name tiltontec.cell.base/cells-reset, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [options]), :arglists ([] [options]), :arglists-meta (nil nil)}, :method-params ([] [options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists ([] [options])}, c-useds {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-useds, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, *call-stack* {:name tiltontec.cell.base/*call-stack*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 29, :column 1, :end-line 29, :end-column 28, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 29, :column 16, :end-line 29, :end-column 28, :dynamic true}, :tag clj-nil}, *c-prop-depth* {:name tiltontec.cell.base/*c-prop-depth*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 50, :column 1, :end-line 50, :end-column 30, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 50, :column 16, :end-line 50, :end-column 30, :dynamic true}, :tag number}, c-unbound? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 171, :column 7, :end-line 171, :end-column 17, :arglists (quote ([rc]))}, :name tiltontec.cell.base/c-unbound?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 17, :method-params ([rc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rc]))}, without-c-dependency {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 67, :column 11, :end-line 67, :end-column 31, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.base/without-c-dependency, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 31, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 67, :macro true, :end-line 67, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, *depender* {:meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :line 30, :column 16, :end-line 30, :end-column 26, :dynamic true}, :name tiltontec.cell.base/*depender*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :end-column 26, :column 1, :dynamic true, :line 30, :end-line 30, :tag clj-nil, :doc "*depender* let's us differentiate between the call stack and\nand dependency. The problem with overloading *call-stack* with both roles\nis that we miss cyclic reentrance when we use without-c-dependency in a\nrule to get once behavior or just when fm-traversing to find someone"}, c-state {:protocol-inline nil, :meta {:arglists (quote ([ref])), :file nil}, :name tiltontec.cell.base/c-state, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/base.cljc", :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}}, :cljs.spec/registry-ref [], :require-macros {utm tiltontec.util.base, tiltontec.util.base tiltontec.util.base, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:callers :valid :synaptic? :optimized-away tiltontec.cell.base/*depender* :unbound cljs.core/binding :slot :else cljs.core/deref :uncurrent :default :name :rule cljs.core/when-not :value tiltontec.cell.base/+stop+ :type :ephemeral? :debug :state :pulse-observed :lazy :tiltontec.cell.base/c-formula tiltontec.cell.base/c-slot :pulse-last-changed :pulse :tiltontec.cell.base/model cljs.core/println :useds :tiltontec.cell.base/cell :optimize :tiltontec.cell.base/object tiltontec.cell.base/c-state :me :client-queue-handler :hierarchy :input? :pcell :users}, :order [cljs.core/println :pcell tiltontec.cell.base/c-slot tiltontec.cell.base/c-state :debug :client-queue-handler cljs.core/binding tiltontec.cell.base/*depender* cljs.core/when-not cljs.core/deref tiltontec.cell.base/+stop+ :slot :tiltontec.cell.base/model :tiltontec.cell.base/object :tiltontec.cell.base/cell :tiltontec.cell.base/c-formula :type :default :me :state :input? :rule :pulse :pulse-last-changed :pulse-observed :useds :users :callers :optimize :ephemeral? :lazy :synaptic? :value :else :optimized-away :name :unbound :uncurrent :valid :hierarchy]}, :doc nil}