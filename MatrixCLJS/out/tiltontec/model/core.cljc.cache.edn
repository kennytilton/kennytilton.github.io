{:rename-macros {}, :renames {}, :externs {Error {}, Object {}}, :use-macros {make-cell tiltontec.cell.core, caller-ensure tiltontec.cell.base, *not-to-be* tiltontec.cell.base, caller-drop tiltontec.cell.base, c-in tiltontec.cell.core, c-input? tiltontec.cell.base, c-synaptic? tiltontec.cell.base, c-value-state tiltontec.cell.base, c-optimized-away? tiltontec.cell.base, unbound tiltontec.cell.base, pln tiltontec.util.core, c?n tiltontec.cell.core, c-optimize tiltontec.cell.base, c-valid? tiltontec.cell.base, any-ref? tiltontec.util.core, *causation* tiltontec.cell.base, *defer-changes* tiltontec.cell.base, c-pulse tiltontec.cell.base, observe tiltontec.cell.observer, +pulse+ tiltontec.cell.base, c-pulse-last-changed tiltontec.cell.base, c-slots tiltontec.cell.base, c?+ tiltontec.cell.core, md-ref? tiltontec.cell.base, rmap-meta-setf tiltontec.util.core, c-value tiltontec.cell.base, c-awaken tiltontec.cell.evaluate, with-integrity tiltontec.cell.integrity, mdead? tiltontec.cell.base, err tiltontec.util.core, c-get tiltontec.cell.evaluate, c-callers tiltontec.cell.base, c-ephemeral? tiltontec.cell.base, ia-type? tiltontec.cell.base, c-ref? tiltontec.cell.base, not-to-be-self tiltontec.cell.evaluate, cells-init tiltontec.cell.base, c-model tiltontec.cell.base, c-pulse-observed tiltontec.cell.base, c?once tiltontec.cell.core, not-to-be tiltontec.cell.evaluate, def-rmap-slots tiltontec.util.base, ia-type tiltontec.cell.base, c-slot tiltontec.cell.base, type-of tiltontec.util.core, c-rule tiltontec.cell.base, c-reset! tiltontec.cell.core, unlink-from-callers tiltontec.cell.base, c? tiltontec.cell.core, c-formula? tiltontec.cell.base, c-me tiltontec.cell.base, *trx?* tiltontec.util.base, c-lazy tiltontec.cell.base, difference clojure.set, c-reset-next! tiltontec.cell.core, c-slot-name tiltontec.cell.base, trx tiltontec.util.base, md-slot-owning? tiltontec.cell.base, c-useds tiltontec.cell.base, *call-stack* tiltontec.cell.base, *c-prop-depth* tiltontec.cell.base, c-unbound? tiltontec.cell.base, without-c-dependency tiltontec.cell.base, *depender* tiltontec.cell.base, rmap-setf tiltontec.util.core, prog1 tiltontec.util.base, c-state tiltontec.cell.base}, :excludes #{}, :name tiltontec.model.core, :imports nil, :requires {tiltontec.cell.observer tiltontec.cell.observer, tiltontec.cell.base tiltontec.cell.base, tiltontec.util.core tiltontec.util.core, cty tiltontec.cell.base, tiltontec.cell.evaluate tiltontec.cell.evaluate, tiltontec.model.base tiltontec.model.base, tiltontec.cell.core tiltontec.cell.core, clojure.set clojure.set, tiltontec.util.base tiltontec.util.base, tiltontec.cell.integrity tiltontec.cell.integrity}, :cljs.spec/speced-vars [], :uses {make-cell tiltontec.cell.core, caller-ensure tiltontec.cell.base, *not-to-be* tiltontec.cell.base, caller-drop tiltontec.cell.base, c-in tiltontec.cell.core, c-input? tiltontec.cell.base, md-cell tiltontec.model.base, c-synaptic? tiltontec.cell.base, c-value-state tiltontec.cell.base, c-optimized-away? tiltontec.cell.base, unbound tiltontec.cell.base, pln tiltontec.util.core, c-optimize tiltontec.cell.base, md-awaken tiltontec.model.base, c-valid? tiltontec.cell.base, any-ref? tiltontec.util.core, *causation* tiltontec.cell.base, *defer-changes* tiltontec.cell.base, c-pulse tiltontec.cell.base, observe tiltontec.cell.observer, +pulse+ tiltontec.cell.base, c-pulse-last-changed tiltontec.cell.base, c-slots tiltontec.cell.base, md-ref? tiltontec.cell.base, rmap-meta-setf tiltontec.util.core, c-value tiltontec.cell.base, c-awaken tiltontec.cell.evaluate, mdead? tiltontec.cell.base, err tiltontec.util.core, c-get tiltontec.cell.evaluate, c-callers tiltontec.cell.base, c-ephemeral? tiltontec.cell.base, ia-type? tiltontec.cell.base, c-ref? tiltontec.cell.base, not-to-be-self tiltontec.cell.evaluate, cells-init tiltontec.cell.base, c-model tiltontec.cell.base, c-pulse-observed tiltontec.cell.base, not-to-be tiltontec.cell.evaluate, ia-type tiltontec.cell.base, c-slot tiltontec.cell.base, type-of tiltontec.util.core, c-rule tiltontec.cell.base, c-reset! tiltontec.cell.core, unlink-from-callers tiltontec.cell.base, c-formula? tiltontec.cell.base, c-me tiltontec.cell.base, c-lazy tiltontec.cell.base, difference clojure.set, c-slot-name tiltontec.cell.base, md-slot-owning? tiltontec.cell.base, c-useds tiltontec.cell.base, *call-stack* tiltontec.cell.base, md-install-cell tiltontec.model.base, *c-prop-depth* tiltontec.cell.base, c-unbound? tiltontec.cell.base, *depender* tiltontec.cell.base, rmap-setf tiltontec.util.core, c-state tiltontec.cell.base}, :defs {mm-obj {:name tiltontec.model.core/mm-obj, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 135, :column 1, :end-line 135, :end-column 12, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 135, :column 6, :end-line 135, :end-column 12}, :tag js}, c?kids {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 269, :column 11, :end-line 269, :end-column 17, :macro true, :arglists (quote ([& tree])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env tree)], :arglists ([&form &env & tree]), :arglists-meta (nil)}}, :name tiltontec.model.core/c?kids, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env tree)], :arglists ([&form &env & tree]), :arglists-meta (nil)}, :method-params [(&form &env tree)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 269, :macro true, :end-line 269, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & tree])}, mxi-find {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 256, :column 7, :end-line 256, :end-column 15, :arglists (quote ([where property value])), :doc "Search matrix below node 'where' for node with property and value"}, :name tiltontec.model.core/mxi-find, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 15, :method-params ([where property value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 256, :max-fixed-arity 3, :fn-var true, :arglists (quote ([where property value])), :doc "Search matrix below node 'where' for node with property and value"}, backdoor-reset!? {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 86, :column 7, :end-line 86, :end-column 23, :arglists (quote ([me slot new-value]))}, :name tiltontec.model.core/backdoor-reset!?, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 23, :method-params ([me slot new-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 3, :fn-var true, :arglists (quote ([me slot new-value]))}, md-getx {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 53, :column 7, :end-line 53, :end-column 14, :arglists (quote ([tag me slot]))}, :name tiltontec.model.core/md-getx, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 14, :method-params ([tag me slot]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tag me slot]))}, make {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 94, :column 7, :end-line 94, :end-column 11, :arglists (quote ([& arg-list])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(arg-list)], :arglists ([& arg-list]), :arglists-meta (nil)}}, :name tiltontec.model.core/make, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(arg-list)], :arglists ([& arg-list]), :arglists-meta (nil)}, :method-params [(arg-list)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 0, :fn-var true, :arglists ([& arg-list])}, fget= {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 157, :column 7, :end-line 157, :end-column 12, :arglists (quote ([seek poss]))}, :name tiltontec.model.core/fget=, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 12, :method-params ([seek poss]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([seek poss]))}, backdoor-reset! {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 91, :column 7, :end-line 91, :end-column 22, :arglists (quote ([me slot new-value]))}, :name tiltontec.model.core/backdoor-reset!, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 22, :method-params ([me slot new-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([me slot new-value]))}, md-get {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 45, :column 7, :end-line 45, :end-column 13, :arglists (quote ([me slot]))}, :name tiltontec.model.core/md-get, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 13, :method-params ([me slot]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([me slot]))}, md-reset! {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 69, :column 7, :end-line 69, :end-column 16, :arglists (quote ([me slot new-value]))}, :name tiltontec.model.core/md-reset!, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 16, :method-params ([me slot new-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 3, :fn-var true, :arglists (quote ([me slot new-value]))}, md-name {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 42, :column 7, :end-line 42, :end-column 14, :arglists (quote ([me]))}, :name tiltontec.model.core/md-name, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 14, :method-params ([me]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([me]))}, fget {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 191, :column 7, :end-line 191, :end-column 11, :arglists (quote ([what where & options])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(what where options)], :arglists ([what where & options]), :arglists-meta (nil)}}, :name tiltontec.model.core/fget, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(what where options)], :arglists ([what where & options]), :arglists-meta (nil)}, :method-params [(what where options)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 2, :fn-var true, :arglists ([what where & options])}, mxu-find-class {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 245, :column 7, :end-line 245, :end-column 21, :arglists (quote ([where class])), :doc "Search up the matrix from node 'where' looking for element with class"}, :name tiltontec.model.core/mxu-find-class, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 21, :method-params ([where class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 2, :fn-var true, :arglists (quote ([where class])), :doc "Search up the matrix from node 'where' looking for element with class"}, the-kids {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 263, :column 11, :end-line 263, :end-column 19, :macro true, :arglists (quote ([& tree])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env tree)], :arglists ([&form &env & tree]), :arglists-meta (nil)}}, :name tiltontec.model.core/the-kids, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env tree)], :arglists ([&form &env & tree]), :arglists-meta (nil)}, :method-params [(&form &env tree)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 263, :macro true, :end-line 263, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & tree])}, mx-par {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 154, :column 7, :end-line 154, :end-column 13, :arglists (quote ([me]))}, :name tiltontec.model.core/mx-par, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 13, :method-params ([me]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([me]))}, fm! {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 234, :column 7, :end-line 234, :end-column 10, :arglists (quote ([what where]))}, :name tiltontec.model.core/fm!, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 10, :method-params ([what where]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 2, :fn-var true, :arglists (quote ([what where]))}, fasc {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 175, :column 7, :end-line 175, :end-column 11, :arglists (quote ([what where & options])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(what where options)], :arglists ([what where & options]), :arglists-meta (nil)}}, :name tiltontec.model.core/fasc, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(what where options)], :arglists ([what where & options]), :arglists-meta (nil)}, :method-params [(what where options)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 2, :fn-var true, :arglists ([what where & options])}, mdv! {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 237, :column 11, :end-line 237, :end-column 15, :macro true, :arglists (quote ([what slot & [me]])), :top-fn {:variadic true, :max-fixed-arity 4, :method-params [(&form &env what slot [me])], :arglists ([&form &env what slot & [me]]), :arglists-meta (nil)}}, :name tiltontec.model.core/mdv!, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 4, :method-params [(&form &env what slot [me])], :arglists ([&form &env what slot & [me]]), :arglists-meta (nil)}, :method-params [(&form &env what slot [me])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 237, :macro true, :end-line 237, :max-fixed-arity 4, :fn-var false, :arglists ([&form &env what slot & [me]])}, fmi-w-class {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 251, :column 7, :end-line 251, :end-column 18, :arglists (quote ([where class]))}, :name tiltontec.model.core/fmi-w-class, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 18, :method-params ([where class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 2, :fn-var true, :arglists (quote ([where class]))}, with-par {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 63, :column 11, :end-line 63, :end-column 19, :macro true, :arglists (quote ([meform & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env meform body)], :arglists ([&form &env meform & body]), :arglists-meta (nil)}}, :name tiltontec.model.core/with-par, :variadic true, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env meform body)], :arglists ([&form &env meform & body]), :arglists-meta (nil)}, :method-params [(&form &env meform body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 63, :macro true, :end-line 63, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env meform & body])}, kid-values-kids {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 274, :column 7, :end-line 274, :end-column 22, :arglists (quote ([me x-kids]))}, :name tiltontec.model.core/kid-values-kids, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 22, :method-params ([me x-kids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 2, :fn-var true, :arglists (quote ([me x-kids]))}, *par* {:name tiltontec.model.core/*par*, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 61, :column 1, :end-line 61, :end-column 21, :dynamic true, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 61, :column 16, :end-line 61, :end-column 21, :dynamic true}, :tag clj-nil}, fmu-w-class {:protocol-inline nil, :meta {:file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :line 241, :column 7, :end-line 241, :end-column 18, :arglists (quote ([where class]))}, :name tiltontec.model.core/fmu-w-class, :variadic false, :file "/Users/kennetht2/todoFRP/todo/MatrixCLJS/src/tiltontec/model/core.cljc", :end-column 18, :method-params ([where class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 2, :fn-var true, :arglists (quote ([where class]))}}, :cljs.spec/registry-ref [], :require-macros {tiltontec.util.base tiltontec.util.base, cty tiltontec.cell.base, tiltontec.cell.base tiltontec.cell.base, tiltontec.cell.integrity tiltontec.cell.integrity, tiltontec.cell.core tiltontec.cell.core}, :cljs.analyzer/constants {:seen #{:tiltontec.model.core/family :fget=bailnotref me cljs.core/binding tiltontec.model.core/*par* :cz :meta :kid-values cljs.core/doall :par :else :kid-key tiltontec.model.core/fm! :awaken :no-net-kids :name :fget-must-failed tiltontec.model.core/md-get :type :state :inside-kids!!! :nascent cljs.core/assert :inside? :family-not-to-be! cljs.core/flatten cljs.core/remove :kids :fasc-must-failed :class :wocd? cljs.core/nil? :kid-factory :must? :up? cljs.core/list :me? tiltontec.model.core/c? tiltontec.model.core/the-kids :skip :inside-no-kids :fm-not-to-be-kid!}, :order [:name cljs.core/binding tiltontec.model.core/*par* :meta :cz :type :else :par :state :nascent :awaken :kids :tiltontec.model.core/family :family-not-to-be! :fm-not-to-be-kid! :fget=bailnotref :me? :wocd? :must? :fasc-must-failed :inside? :up? :inside-kids!!! :skip :no-net-kids :inside-no-kids :fget-must-failed me tiltontec.model.core/md-get tiltontec.model.core/fm! :class cljs.core/assert cljs.core/doall cljs.core/remove cljs.core/nil? cljs.core/flatten cljs.core/list tiltontec.model.core/c? tiltontec.model.core/the-kids :kid-key :kid-factory :kid-values]}, :doc nil}