["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$c-md-name","~$tiltontec.cell.base","~$cinfo","^4","~$set-ify","~$tiltontec.util.core","~$*quiesce*","^4","~$*unfinished-business*","^4","~$*pulse*","^4","~$c-input?","^4","~$c-synaptic?","^4","~$c-pulse-unobserved?","^4","~$dependency-record","^4","~$pcell","^4","~$c-value-state","^4","~$c-optimized-away?","^4","~$minfo","^4","~$c-current?","~$tiltontec.cell.integrity","~$dpc","^4","~$c-optimize","^4","~$*one-pulse?*","^4","~$c-valid?","^4","~$any-ref?","^7","~$unlink-from-used","^4","~$*causation*","^4","~$*defer-changes*","^4","~$c-pulse","^4","~$wtrx","~$tiltontec.util.base","~$c-pulse-last-changed","^4","~$c-prop-name","^4","~$*dp-log*","^4","~$md-ref?","^4","~$rmap-meta-setf","^7","~$c-value","^4","~$*custom-propagator*","^4","~$with-integrity","^D","~$mx-type","^O","~$mdead?","^4","~$err","^7","~$c-callers","^4","~$c-ephemeral?","^4","~$c-ref?","^4","~$c-prop","^4","~$c-model","^4","~$c-pulse-observed","^4","~$md-prop-owning?","^4","~$dependency-drop","^4","~$c-rule","^4","~$c-observe","~$tiltontec.cell.observer","~$unlink-from-callers","^4","~$c-code$","^4","~$c-formula?","^4","~$c-me","^4","~$c-lazy","^4","~$difference","~$clojure.set","~$trx","^O","~$c-useds","^4","~$*call-stack*","^4","~$*c-prop-depth*","^4","~$c-pulse-update","^D","~$c-unbound?","^4","~$without-c-dependency","^4","~$*depender*","^4","~$rmap-setf","^7","~$prog1","^O","~$c-state","^4"],"~:excludes",["~#set",[]],"~:name","~$tiltontec.cell.evaluate","~:imports",null,"~:requires",["^ ","^19","^19","^4","^4","^7","^7","~$cty","^4","^1@","^1@","~$cljs.pprint","^1S","^O","^O","^D","^D","~$str","~$clojure.string","^1U","^1U"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^3","^4","^5","^4","^6","^7","^8","^4","~$pprint","^1S","^9","^4","^:","^4","^;","^4","^<","^4","^=","^4","^>","^4","^@","^4","^A","^4","^B","^4","^C","^D","^E","^4","^F","^4","^G","^4","^H","^4","^I","^7","^J","^4","^K","^4","^L","^4","^M","^4","^P","^4","^Q","^4","^R","^4","^S","^4","^T","^7","^U","^4","^V","^4","^X","^O","^Y","^4","^Z","^7","^[","^4","~$cl-format","^1S","^10","^4","^11","^4","^12","^4","^13","^4","^14","^4","^15","^4","^16","^4","^17","^4","^18","^19","^1:","^4","^1;","^4","^1<","^4","^1=","^4","^1>","^4","^1?","^1@","^1B","^4","^1C","^4","^1D","^4","^1E","^D","^1F","^4","^1H","^4","^1I","^7","^1K","^4"],"~:defs",["^ ","~$md-prop-value-store",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","~:line",267,"~:column",7,"~:end-line",267,"~:end-column",26,"~:arglists",["~#list",["~$quote",["^28",[["~$me","~$prop","~$value"]]]]]],"^1N","~$tiltontec.cell.evaluate/md-prop-value-store","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",26,"~:method-params",["^28",[["^2:","^2;","^2<"]]],"~:protocol-impl",null,"~:arglists-meta",["^28",[null,null]],"^24",1,"~:variadic?",false,"^23",267,"~:ret-tag","~$any","^25",267,"~:max-fixed-arity",3,"~:fn-var",true,"^27",["^28",["^29",["^28",[["^2:","^2;","^2<"]]]]]],"~$md-prop-cell-flushed",["^ ","^1N","~$tiltontec.cell.evaluate/md-prop-cell-flushed","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",432,"^24",1,"^25",434,"^26",23,"~:declared",true,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",434,"^24",3,"^25",434,"^26",23,"^2H",true]],"~$calculate-and-set",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",167,"^24",7,"^25",167,"^26",24,"^27",["^28",["^29",["^28",[["~$c","~$dbgid","~$dbgdata"]]]]],"~:doc","Calculate, link, record, and propagate."],"^1N","~$tiltontec.cell.evaluate/calculate-and-set","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",24,"^2>",["^28",[["~$c","^2J","^2K"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",167,"^2B",["^1M",["^2C","~$clj-nil"]],"^25",167,"^2D",3,"^2E",true,"^27",["^28",["^29",["^28",[["~$c","^2J","^2K"]]]]],"^2L","Calculate, link, record, and propagate."],"~$c-quiesce",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",383,"^24",7,"^25",383,"^26",16,"^27",["^28",["^29",["^28",[["~$c"]]]]]],"^1N","~$tiltontec.cell.evaluate/c-quiesce","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",16,"^2>",["^28",[["~$c"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",383,"^2B",["^1M",[null,"^2C"]],"^25",383,"^2D",1,"^2E",true,"^27",["^28",["^29",["^28",[["~$c"]]]]]],"~$c-absorb-value",["^ ","^1N","~$tiltontec.cell.evaluate/c-absorb-value","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",262,"^24",1,"^25",262,"^26",24,"^2H",true,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",262,"^24",10,"^25",262,"^26",24,"^2H",true]],"~$unchanged-test",["^ ","^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",413,"^24",11,"^25",413,"^26",25,"^2L","Cells does not propagate when nothing changes. By default, the\n  test is =, but cells can inject a different test, and when we get\n  to models it will be possible for a prop to have associated\n  with it a different test."],"^1N","~$tiltontec.cell.evaluate/unchanged-test","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",25,"^24",1,"^23",413,"^25",413,"~:tag","~$cljs.core/MultiFn","^2L","Cells does not propagate when nothing changes. By default, the\n  test is =, but cells can inject a different test, and when we get\n  to models it will be possible for a prop to have associated\n  with it a different test."],"~$ephemeral-reset",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",41,"^24",7,"^25",41,"^26",22,"^27",["^28",["^29",["^28",[["~$rc"]]]]]],"^1N","~$tiltontec.cell.evaluate/ephemeral-reset","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",22,"^2>",["^28",[["^2X"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",41,"^2B",["^1M",[null,"^2C","~$cljs.core/Keyword","^2N"]],"^25",41,"^2D",1,"^2E",true,"^27",["^28",["^29",["^28",[["^2X"]]]]]],"~$md-quiesce-self",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",393,"^24",7,"^25",393,"^26",22,"^27",["^28",["^29",["^28",[["^2:"]]]]]],"^1N","~$tiltontec.cell.evaluate/md-quiesce-self","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",22,"^2>",["^28",[["^2:"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",393,"^2B","^2C","^25",393,"^2D",1,"^2E",true,"^27",["^28",["^29",["^28",[["^2:"]]]]]],"~$optimize-away?!",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",347,"^24",7,"^25",347,"^26",22,"^27",["^28",["^29",["^28",[["~$c","~$prior-value"]]]]],"^2L","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a prop and Just Use It."],"^1N","~$tiltontec.cell.evaluate/optimize-away?!","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",22,"^2>",["^28",[["~$c","^32"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",347,"^2B",["^1M",[null,"^2C","^2N"]],"^25",347,"^2D",2,"^2E",true,"^27",["^28",["^29",["^28",[["~$c","^32"]]]]],"^2L","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a prop and Just Use It."],"~$ensure-value-is-current",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",60,"^24",7,"^25",60,"^26",30,"^27",["^28",["^29",["^28",[["~$c","~$debug-id","~$ensurer"]]]]],"^2L","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"^1N","~$tiltontec.cell.evaluate/ensure-value-is-current","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",30,"^2>",["^28",[["~$c","^35","^36"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",60,"^2B",["^1M",["^2C","^2N"]],"^25",60,"^2D",3,"^2E",true,"^27",["^28",["^29",["^28",[["~$c","^35","^36"]]]]],"^2L","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"~$propagate",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",436,"^24",7,"^25",436,"^26",16,"^27",["^28",["^29",["^28",[["~$c","^32","~$callers"]]]]],"^2L","A cell:\n  - notifies its callers of its change;\n  - calls any observer; and\n  - if ephemeral, silently reverts to nil."],"^1N","~$tiltontec.cell.evaluate/propagate","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",16,"^2>",["^28",[["~$c","^32","^39"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",436,"^2B",["^1M",[null,"^2C","^2N"]],"^25",436,"^2D",3,"^2E",true,"^27",["^28",["^29",["^28",[["~$c","^32","^39"]]]]],"^2L","A cell:\n  - notifies its callers of its change;\n  - calls any observer; and\n  - if ephemeral, silently reverts to nil."],"~$md-cell-flush",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",336,"^24",7,"^25",336,"^26",20,"^27",["^28",["^29",["^28",[["~$c"]]]]]],"^1N","~$tiltontec.cell.evaluate/md-cell-flush","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",20,"^2>",["^28",[["~$c"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",336,"^2B",["^1M",["^2C","^2N"]],"^25",336,"^2D",1,"^2E",true,"^27",["^28",["^29",["^28",[["~$c"]]]]]],"~$c-awaken",["^ ","^1N","~$tiltontec.cell.evaluate/c-awaken","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",225,"^24",1,"^25",225,"^26",19,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",225,"^24",11,"^25",225,"^26",19],"^2U","^2V"],"~$c-get",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",124,"^24",7,"^25",124,"^26",12,"^27",["^28",["^29",["^28",[["~$c"]]]]],"^2L","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been observed."],"^1N","~$tiltontec.cell.evaluate/c-get","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",12,"^2>",["^28",[["~$c"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",124,"^2B",["^1M",[null,"^2C","^2Z"]],"^25",124,"^2D",1,"^2E",true,"^27",["^28",["^29",["^28",[["~$c"]]]]],"^2L","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been observed."],"~$c-value-assume",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",273,"^24",7,"^25",273,"^26",21,"^27",["^28",["^29",["^28",[["~$c","~$new-value","~$propagation-code"]]]]],"^2L","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"^1N","~$tiltontec.cell.evaluate/c-value-assume","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",21,"^2>",["^28",[["~$c","^3B","^3C"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",273,"^25",273,"^2D",3,"^2E",true,"^27",["^28",["^29",["^28",[["~$c","^3B","^3C"]]]]],"^2L","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"~$<cget",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",161,"^24",7,"^25",161,"^26",12,"^27",["^28",["^29",["^28",[["~$c"]]]]]],"^1N","~$tiltontec.cell.evaluate/<cget","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",12,"^2>",["^28",[["~$c"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",161,"^2B",["^1M",[null,"^2C","^2Z"]],"^25",161,"^2D",1,"^2E",true,"^27",["^28",["^29",["^28",[["~$c"]]]]]],"~$calculate-and-link",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",183,"^24",7,"^25",183,"^26",25,"^27",["^28",["^29",["^28",[["~$c"]]]]],"^2L","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"^1N","~$tiltontec.cell.evaluate/calculate-and-link","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",25,"^2>",["^28",[["~$c"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",183,"^25",183,"^2D",1,"^2E",true,"^27",["^28",["^29",["^28",[["~$c"]]]]],"^2L","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"~$c-value-changed?",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",425,"^24",7,"^25",425,"^26",23,"^27",["^28",["^29",["^28",[["~$c","^3B","~$old-value"]]]]]],"^1N","~$tiltontec.cell.evaluate/c-value-changed?","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",23,"^2>",["^28",[["~$c","^3B","^3J"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",425,"^2B","~$boolean","^25",425,"^2D",3,"^2E",true,"^27",["^28",["^29",["^28",[["~$c","^3B","^3J"]]]]]],"~$propagate-to-callers",["^ ","^20",null,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",494,"^24",7,"^25",494,"^26",27,"^27",["^28",["^29",["^28",[["~$c","^39"]]]]]],"^1N","~$tiltontec.cell.evaluate/propagate-to-callers","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^26",27,"^2>",["^28",[["~$c","^39"]]],"^2?",null,"^2@",["^28",[null,null]],"^24",1,"^2A",false,"^23",494,"^2B",["^1M",[null,"^2C","^2Z","^2N"]],"^25",494,"^2D",2,"^2E",true,"^27",["^28",["^29",["^28",[["~$c","^39"]]]]]],"~$md-quiesce",["^ ","^1N","~$tiltontec.cell.evaluate/md-quiesce","^22","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",403,"^24",1,"^25",403,"^26",21,"^21",["^ ","^22","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^23",403,"^24",11,"^25",403,"^26",21],"^2U","^2V"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^1S","^1S","^O","^O","^1R","^4","^4","^4","^D","^D"],"~:cljs.analyzer/constants",["^ ","~:seen",["^1M",["~:valid","~:optimized-away","~:awake","~:c-read","~:cells-flushed","~:cz","~:pre-rule-clear","~:ephemeral-reset","~:dead","~:freeze","~:opti-used","~:else","~:unchanged-if","~:no-propagate","~:uncurrent","~:quiesced","~:on-quiesce","~:default","~:c-awaken-def!!!","~:c-awaken-fall-thru","~:propagate","~:nested","~:value","~:fn-c-awaken","~:nascent","~:evic","~:ref-of","~:tiltontec.cell.base/c-formula","~:pulse-last-changed","~:tell-dependents","~:tiltontec.cell.base/state","~:prop","~:unref","~:cget","~:quiesce!!!-def","~:tiltontec.cell.base/cell","~:quiesce","~:when-value-t","~:cell-awaken","~:dead-c","~:once-asked","~:me","~:hierarchy","~:opti-away","~:propv-assume","~:valid-uninfluenced","~:always"]],"~:order",["^40","^4R","^4H","^4?","^4N","^4>","^4B","^44","^4V","^3X","^4A","^4G","^3W","^4J","^3[","^4=","^4S","^4:","^4;","^4<","^4C","^4I","^4L","^4O","^4D","^4@","^4U","^4E","^3U","^47","^46","^3Y","^42","^3V","^4T","^3Z","^43","^49","^4M","^4P","^41","^4K","^45","^4Q","^4W","^4F","^48"]],"^2L",null]