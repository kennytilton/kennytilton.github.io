["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$c-md-name","~$tiltontec.cell.base","~$cinfo","^4","~$set-ify","~$tiltontec.util.core","~$*unfinished-business*","^4","~$*pulse*","^4","~$c-input?","^4","~$c-synaptic?","^4","~$c-pulse-unobserved?","^4","~$dependency-record","^4","~$pcell","^4","~$c-value-state","^4","~$*finalize*","^4","~$c-optimized-away?","^4","~$minfo","^4","~$c-current?","~$tiltontec.cell.integrity","~$dpc","^4","~$c-optimize","^4","~$*one-pulse?*","^4","~$c-valid?","^4","~$any-ref?","^7","~$unlink-from-used","^4","~$*causation*","^4","~$*defer-changes*","^4","~$c-pulse","^4","~$wtrx","~$tiltontec.util.base","~$c-pulse-last-changed","^4","~$*dp-log*","^4","~$md-ref?","^4","~$rmap-meta-setf","^7","~$c-value","^4","~$*custom-propagator*","^4","~$with-integrity","^D","~$mdead?","^4","~$err","^7","~$c-callers","^4","~$c-ephemeral?","^4","~$c-ref?","^4","~$c-model","^4","~$c-pulse-observed","^4","~$ia-type","^4","~$c-slot","^4","~$dependency-drop","^4","~$c-rule","^4","~$unlink-from-callers","^4","~$c-code$","^4","~$c-formula?","^4","~$c-me","^4","~$c-lazy","^4","~$difference","~$clojure.set","~$c-slot-name","^4","~$trx","^O","~$md-slot-owning?","^4","~$c-useds","^4","~$*call-stack*","^4","~$*c-prop-depth*","^4","~$c-pulse-update","^D","~$c-unbound?","^4","~$without-c-dependency","^4","~$*depender*","^4","~$rmap-setf","^7","~$prog1","^O","~$c-state","^4"],"~:excludes",["~#set",[]],"~:name","~$tiltontec.cell.evaluate","~:imports",null,"~:requires",["^ ","~$tiltontec.cell.observer","^1P","^4","^4","^7","^7","~$cty","^4","^1<","^1<","~$cljs.pprint","^1R","^O","^O","^D","^D","~$str","~$clojure.string","^1T","^1T"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^3","^4","^5","^4","^6","^7","~$pprint","^1R","^8","^4","^9","^4","^:","^4","^;","^4","^<","^4","^=","^4","^?","^4","^@","^4","^A","^4","^B","^4","^C","^D","^E","^4","^F","^4","^G","^4","^H","^4","^I","^7","^J","^4","^K","^4","^L","^4","^M","^4","^P","^4","^Q","^4","^R","^4","^S","^7","^T","^4","^U","^4","^W","^4","^X","^7","^Y","^4","~$cl-format","^1R","^Z","^4","^[","^4","^10","^4","^11","^4","^12","^4","^13","^4","^14","^4","^15","^4","~$c-observe","^1P","^16","^4","^17","^4","^18","^4","^19","^4","^1:","^4","^1;","^1<","^1=","^4","^1?","^4","^1@","^4","^1A","^4","^1B","^4","^1C","^D","^1D","^4","^1F","^4","^1G","^7","^1I","^4"],"~:defs",["^ ","~$finalize",["^ ","^1L","~$tiltontec.cell.evaluate/finalize","~:file","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","~:line",398,"~:column",1,"~:end-line",398,"~:end-column",19,"~:meta",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",398,"^23",11,"^24",398,"^25",19],"~:tag","~$cljs.core/MultiFn"],"~$calculate-and-set",["^ ","~:protocol-inline",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",166,"^23",7,"^24",166,"^25",24,"~:arglists",["~#list",["~$quote",["^2<",[["~$c","~$dbgid","~$dbgdata"]]]]],"~:doc","Calculate, link, record, and propagate."],"^1L","~$tiltontec.cell.evaluate/calculate-and-set","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",24,"~:method-params",["^2<",[["~$c","^2>","^2?"]]],"~:protocol-impl",null,"~:arglists-meta",["^2<",[null,null]],"^23",1,"~:variadic?",false,"^22",166,"~:ret-tag",["^1K",["~$any","~$clj-nil"]],"^24",166,"~:max-fixed-arity",3,"~:fn-var",true,"^2;",["^2<",["^2=",["^2<",[["~$c","^2>","^2?"]]]]],"^2@","Calculate, link, record, and propagate."],"~$c-quiesce",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",382,"^23",7,"^24",382,"^25",16,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]]],"^1L","~$tiltontec.cell.evaluate/c-quiesce","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",16,"^2B",["^2<",[["~$c"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",382,"^2F",["^1K",[null,"^2G"]],"^24",382,"^2I",1,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]]],"~$c-absorb-value",["^ ","^1L","~$tiltontec.cell.evaluate/c-absorb-value","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",261,"^23",1,"^24",261,"^25",24,"~:declared",true,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",261,"^23",10,"^24",261,"^25",24,"^2O",true]],"~$md-slot-cell-flushed",["^ ","^1L","~$tiltontec.cell.evaluate/md-slot-cell-flushed","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",426,"^23",1,"^24",428,"^25",23,"^2O",true,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",428,"^23",3,"^24",428,"^25",23,"^2O",true]],"~$unchanged-test",["^ ","^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",407,"^23",11,"^24",407,"^25",25,"^2@","Cells does not propagate when nothing changes. By default, the\n  test is =, but cells can inject a different test, and when we get\n  to models it will be possible for a slot to have associated\n  with it a different test."],"^1L","~$tiltontec.cell.evaluate/unchanged-test","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",25,"^23",1,"^22",407,"^24",407,"^27","^28","^2@","Cells does not propagate when nothing changes. By default, the\n  test is =, but cells can inject a different test, and when we get\n  to models it will be possible for a slot to have associated\n  with it a different test."],"~$ephemeral-reset",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",40,"^23",7,"^24",40,"^25",22,"^2;",["^2<",["^2=",["^2<",[["~$rc"]]]]]],"^1L","~$tiltontec.cell.evaluate/ephemeral-reset","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",22,"^2B",["^2<",[["^2U"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",40,"^2F",["^1K",[null,"^2G","~$cljs.core/Keyword","^2H"]],"^24",40,"^2I",1,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["^2U"]]]]]],"~$optimize-away?!",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",346,"^23",7,"^24",346,"^25",22,"^2;",["^2<",["^2=",["^2<",[["~$c","~$prior-value"]]]]],"^2@","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a slot and Just Use It."],"^1L","~$tiltontec.cell.evaluate/optimize-away?!","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",22,"^2B",["^2<",[["~$c","^2Y"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",346,"^2F",["^1K",[null,"^2G","^2H"]],"^24",346,"^2I",2,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c","^2Y"]]]]],"^2@","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a slot and Just Use It."],"~$ensure-value-is-current",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",59,"^23",7,"^24",59,"^25",30,"^2;",["^2<",["^2=",["^2<",[["~$c","~$debug-id","~$ensurer"]]]]],"^2@","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"^1L","~$tiltontec.cell.evaluate/ensure-value-is-current","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",30,"^2B",["^2<",[["~$c","^30","^31"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",59,"^2F",["^1K",["^2G","^2H"]],"^24",59,"^2I",3,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c","^30","^31"]]]]],"^2@","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"~$propagate",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",430,"^23",7,"^24",430,"^25",16,"^2;",["^2<",["^2=",["^2<",[["~$c","^2Y","~$callers"]]]]],"^2@","A cell:\n  - notifies its callers of its change;\n  - calls any observer; and\n  - if ephemeral, silently reverts to nil."],"^1L","~$tiltontec.cell.evaluate/propagate","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",16,"^2B",["^2<",[["~$c","^2Y","^34"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",430,"^2F",["^1K",[null,"^2G","^2H"]],"^24",430,"^2I",3,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c","^2Y","^34"]]]]],"^2@","A cell:\n  - notifies its callers of its change;\n  - calls any observer; and\n  - if ephemeral, silently reverts to nil."],"~$md-cell-flush",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",335,"^23",7,"^24",335,"^25",20,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]]],"^1L","~$tiltontec.cell.evaluate/md-cell-flush","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",20,"^2B",["^2<",[["~$c"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",335,"^2F",["^1K",["^2G","^2H"]],"^24",335,"^2I",1,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]]],"~$c-awaken",["^ ","^1L","~$tiltontec.cell.evaluate/c-awaken","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",224,"^23",1,"^24",224,"^25",19,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",224,"^23",11,"^24",224,"^25",19],"^27","^28"],"~$c-get",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",123,"^23",7,"^24",123,"^25",12,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]],"^2@","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been observed."],"^1L","~$tiltontec.cell.evaluate/c-get","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",12,"^2B",["^2<",[["~$c"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",123,"^2F",["^1K",[null,"^2G","^2W"]],"^24",123,"^2I",1,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]],"^2@","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been observed."],"~$c-value-assume",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",272,"^23",7,"^24",272,"^25",21,"^2;",["^2<",["^2=",["^2<",[["~$c","~$new-value","~$propagation-code"]]]]],"^2@","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"^1L","~$tiltontec.cell.evaluate/c-value-assume","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",21,"^2B",["^2<",[["~$c","^3=","^3>"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",272,"^24",272,"^2I",3,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c","^3=","^3>"]]]]],"^2@","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"~$md-slot-value-store",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",266,"^23",7,"^24",266,"^25",26,"^2;",["^2<",["^2=",["^2<",[["~$me","~$slot","~$value"]]]]]],"^1L","~$tiltontec.cell.evaluate/md-slot-value-store","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",26,"^2B",["^2<",[["^3A","^3B","^3C"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",266,"^2F","^2G","^24",266,"^2I",3,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["^3A","^3B","^3C"]]]]]],"~$finalize-self",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",390,"^23",7,"^24",390,"^25",20,"^2;",["^2<",["^2=",["^2<",[["^3A"]]]]]],"^1L","~$tiltontec.cell.evaluate/finalize-self","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",20,"^2B",["^2<",[["^3A"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",390,"^2F","^2G","^24",390,"^2I",1,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["^3A"]]]]]],"~$<cget",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",160,"^23",7,"^24",160,"^25",12,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]]],"^1L","~$tiltontec.cell.evaluate/<cget","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",12,"^2B",["^2<",[["~$c"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",160,"^2F",["^1K",[null,"^2G","^2W"]],"^24",160,"^2I",1,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]]],"~$calculate-and-link",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",182,"^23",7,"^24",182,"^25",25,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]],"^2@","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"^1L","~$tiltontec.cell.evaluate/calculate-and-link","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",25,"^2B",["^2<",[["~$c"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",182,"^24",182,"^2I",1,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c"]]]]],"^2@","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"~$c-value-changed?",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",419,"^23",7,"^24",419,"^25",23,"^2;",["^2<",["^2=",["^2<",[["~$c","^3=","~$old-value"]]]]]],"^1L","~$tiltontec.cell.evaluate/c-value-changed?","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",23,"^2B",["^2<",[["~$c","^3=","^3L"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",419,"^2F","~$boolean","^24",419,"^2I",3,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c","^3=","^3L"]]]]]],"~$propagate-to-callers",["^ ","^2:",null,"^26",["^ ","^21","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^22",488,"^23",7,"^24",488,"^25",27,"^2;",["^2<",["^2=",["^2<",[["~$c","^34"]]]]]],"^1L","~$tiltontec.cell.evaluate/propagate-to-callers","^21","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^25",27,"^2B",["^2<",[["~$c","^34"]]],"^2C",null,"^2D",["^2<",[null,null]],"^23",1,"^2E",false,"^22",488,"^2F",["^1K",[null,"^2G","^2W","^2H"]],"^24",488,"^2I",2,"^2J",true,"^2;",["^2<",["^2=",["^2<",[["~$c","^34"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^1R","^1R","^O","^O","^1Q","^4","^4","^4","^D","^D"],"~:cljs.analyzer/constants",["^ ","~:seen",["^1K",["~:valid","~:optimized-away","~:slot","~:awake","~:c-read","~:cells-flushed","~:cz","~:pre-rule-clear","~:ephemeral-reset","~:dead","~:freeze","~:opti-used","~:else","~:unchanged-if","~:no-propagate","~:uncurrent","~:quiesced","~:default","~:c-awaken-fall-thru","~:propagate","~:nested","~:value","~:type","~:slotv-assume","~:fn-c-awaken","~:nascent","~:evic","~:ref-of","~:tiltontec.cell.base/c-formula","~:pulse-last-changed","~:tell-dependents","~:tiltontec.cell.base/state","~:unref","~:cget","~:tiltontec.cell.base/cell","~:quiesce","~:when-value-t","~:cell-awaken","~:dead-c","~:once-asked","~:me","~:hierarchy","~:opti-away","~:valid-uninfluenced","~:always"]],"~:order",["^41","^4Q","^3W","^4>","^4M","^4=","^4C","^45","^4T","^3Y","^4B","^4H","^3X","^4J","^40","^4<","^4R","^4?","^4:","^4;","^4D","^4I","^4K","^4N","^4E","^4A","^4@","^4F","^3U","^48","^47","^3Z","^43","^3V","^4S","^3[","^44","^4L","^4O","^42","^46","^4P","^4U","^4G","^49"]],"^2@",null]