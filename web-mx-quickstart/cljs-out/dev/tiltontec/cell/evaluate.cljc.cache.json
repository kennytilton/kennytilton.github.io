["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$c-md-name","~$tiltontec.cell.base","~$cinfo","^4","~$set-ify","~$tiltontec.util.core","~$*quiesce*","^4","~$*unfinished-business*","^4","~$*pulse*","^4","~$c-input?","^4","~$c-synaptic?","^4","~$dependency-record","^4","~$c-value-state","^4","~$c-optimized-away?","^4","~$minfo","^4","~$c-current?","~$tiltontec.cell.integrity","~$cdbg","^4","~$dpc","^4","~$c-optimize","^4","~$*one-pulse?*","^4","~$c-valid?","^4","~$any-ref?","^7","~$unlink-from-used","^4","~$*causation*","^4","~$*defer-changes*","^4","~$c-pulse","^4","~$wtrx","~$tiltontec.util.base","~$c-pulse-last-changed","^4","~$c-prop-name","^4","~$*dp-log*","^4","~$md-ref?","^4","~$rmap-meta-setf","^7","~$c-value","^4","~$*custom-propagator*","^4","~$with-integrity","^B","~$mx-type","^N","~$c-pulse-unwatched?","^4","~$mdead?","^4","~$err","^7","~$c-callers","^4","~$c-ephemeral?","^4","~$c-ref?","^4","~$c-prop","^4","~$c-model","^4","~$md-prop-owning?","^4","~$c-async?","^4","~$dependency-drop","^4","~$c-rule","^4","~$unlink-from-callers","^4","~$c-code$","^4","~$c-formula?","^4","~$c-me","^4","~$c-lazy","^4","~$difference","~$clojure.set","~$trx","^N","~$c-pulse-watched","^4","~$c-useds","^4","~$*call-stack*","^4","~$*c-prop-depth*","^4","~$c-pulse-update","^B","~$c-unbound?","^4","~$without-c-dependency","^4","~$*depender*","^4","~$rmap-setf","^7","~$prog1","^N","~$c-state","^4"],"~:excludes",["~#set",[]],"~:name","~$tiltontec.cell.evaluate","~:imports",null,"~:requires",["^ ","^4","^4","^7","^7","~$cty","^4","^1>","^1>","~$tiltontec.cell.watch","^1R","~$cljs.pprint","^1S","^N","^N","~$tiltontec.cell.poly","^1T","~$tiltontec.cell.diagnostic","^1U","^B","^B","~$str","~$clojure.string","^1W","^1W"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^3","^4","^5","^4","^6","^7","^8","^4","~$pprint","^1S","^9","^4","^:","^4","^;","^4","^<","^4","^=","^4","^>","^4","^?","^4","~$c-watch","^1R","^@","^4","^A","^B","^C","^4","^D","^4","^E","^4","^F","^4","^G","^4","^H","^7","^I","^4","^J","^4","^K","^4","~$unchanged-test","^1T","^L","^4","~$md-quiesce-self","^1T","^O","^4","^P","^4","^Q","^4","^R","^4","^S","^7","^T","^4","^U","^4","~$c-awaken","^1T","^W","^N","^X","^4","^Y","^4","^Z","^7","^[","^4","~$cl-format","^1S","^10","^4","^11","^4","^12","^4","^13","^4","^14","^4","^15","^4","^16","^4","^17","^4","^18","^4","^19","^4","~$mxtrc","^1U","^1:","^4","^1;","^4","^1<","^4","^1=","^1>","^1@","^4","^1A","^4","^1B","^4","^1C","^4","^1D","^B","^1E","^4","^1F","^4","^1G","^4","^1H","^7","^1J","^4","~$md-quiesce","^1T"],"~:defs",["^ ","~$md-prop-value-store",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","~:line",296,"~:column",7,"~:end-line",296,"~:end-column",26,"~:arglists",["~#list",["~$quote",["^2@",[["~$me","~$prop","~$value"]]]]]],"^1M","~$tiltontec.cell.evaluate/md-prop-value-store","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",26,"~:method-params",["^2@",[["^2B","^2C","^2D"]]],"~:protocol-impl",null,"~:arglists-meta",["^2@",[null,null]],"^2<",1,"~:variadic?",false,"^2;",296,"~:ret-tag","~$any","^2=",296,"~:max-fixed-arity",3,"~:fn-var",true,"^2?",["^2@",["^2A",["^2@",[["^2B","^2C","^2D"]]]]]],"~$md-prop-cell-flushed",["^ ","^1M","~$tiltontec.cell.evaluate/md-prop-cell-flushed","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",449,"^2<",1,"^2=",451,"^2>",23,"~:declared",true,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",451,"^2<",3,"^2=",451,"^2>",23,"^2P",true]],"~$calculate-and-set",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",162,"^2<",7,"^2=",162,"^2>",24,"^2?",["^2@",["^2A",["^2@",[["~$c","~$dbgid","~$dbgdata"]]]]],"~:doc","Calculate, link, record, and propagate."],"^1M","~$tiltontec.cell.evaluate/calculate-and-set","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",24,"^2F",["^2@",[["~$c","^2R","^2S"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",162,"^2J",["^1L",["^2K","~$clj-nil"]],"^2=",162,"^2L",3,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c","^2R","^2S"]]]]],"^2T","Calculate, link, record, and propagate."],"~$c-quiesce",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",414,"^2<",7,"^2=",414,"^2>",16,"^2?",["^2@",["^2A",["^2@",[["~$c"]]]]]],"^1M","~$tiltontec.cell.evaluate/c-quiesce","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",16,"^2F",["^2@",[["~$c"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",414,"^2J",["^1L",[null,"^2K"]],"^2=",414,"^2L",1,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c"]]]]]],"~$c-absorb-value",["^ ","^1M","~$tiltontec.cell.evaluate/c-absorb-value","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",291,"^2<",1,"^2=",291,"^2>",24,"^2P",true,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",291,"^2<",10,"^2=",291,"^2>",24,"^2P",true]],"~$ephemeral-reset",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",39,"^2<",7,"^2=",39,"^2>",22,"^2?",["^2@",["^2A",["^2@",[["~$rc"]]]]]],"^1M","~$tiltontec.cell.evaluate/ephemeral-reset","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",22,"^2F",["^2@",[["^30"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",39,"^2J",["^1L",[null,"^2K","~$cljs.core/Keyword","^2V"]],"^2=",39,"^2L",1,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["^30"]]]]]],"~$optimize-away?!",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",377,"^2<",7,"^2=",377,"^2>",22,"^2?",["^2@",["^2A",["^2@",[["~$c","~$prior-value"]]]]],"^2T","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a prop and Just Use It."],"^1M","~$tiltontec.cell.evaluate/optimize-away?!","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",22,"^2F",["^2@",[["~$c","^34"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",377,"^2J",["^1L",[null,"^2K","^2V"]],"^2=",377,"^2L",2,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c","^34"]]]]],"^2T","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a prop and Just Use It."],"~$ensure-value-is-current",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",58,"^2<",7,"^2=",58,"^2>",30,"^2?",["^2@",["^2A",["^2@",[["~$c","~$debug-id","~$ensurer"]]]]],"^2T","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"^1M","~$tiltontec.cell.evaluate/ensure-value-is-current","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",30,"^2F",["^2@",[["~$c","^37","^38"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",58,"^2J",["^1L",["^2K","^2V"]],"^2=",58,"^2L",3,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c","^37","^38"]]]]],"^2T","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"~$propagate",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",453,"^2<",7,"^2=",453,"^2>",16,"^2?",["^2@",["^2A",["^2@",[["~$c","^34","~$callers"]]]]],"^2T","A cell:\n  - notifies its callers of its change;\n  - calls any watch; and\n  - if ephemeral, silently reverts to nil."],"^1M","~$tiltontec.cell.evaluate/propagate","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",16,"^2F",["^2@",[["~$c","^34","^3;"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",453,"^2J",["^1L",[null,"^2K","^2V"]],"^2=",453,"^2L",3,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c","^34","^3;"]]]]],"^2T","A cell:\n  - notifies its callers of its change;\n  - calls any watch; and\n  - if ephemeral, silently reverts to nil."],"~$md-cell-flush",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",366,"^2<",7,"^2=",366,"^2>",20,"^2?",["^2@",["^2A",["^2@",[["~$c"]]]]]],"^1M","~$tiltontec.cell.evaluate/md-cell-flush","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",20,"^2F",["^2@",[["~$c"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",366,"^2J",["^1L",["^2K","^2V"]],"^2=",366,"^2L",1,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c"]]]]]],"~$c-value-assume",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",302,"^2<",7,"^2=",302,"^2>",21,"^2?",["^2@",["^2A",["^2@",[["~$c","~$new-value","~$propagation-code"]]]]],"^2T","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"^1M","~$tiltontec.cell.evaluate/c-value-assume","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",21,"^2F",["^2@",[["~$c","^3@","^3A"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",302,"^2=",302,"^2L",3,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c","^3@","^3A"]]]]],"^2T","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"~$calculate-and-link",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",210,"^2<",7,"^2=",210,"^2>",25,"^2?",["^2@",["^2A",["^2@",[["~$c"]]]]],"^2T","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"^1M","~$tiltontec.cell.evaluate/calculate-and-link","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",25,"^2F",["^2@",[["~$c"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",210,"^2=",210,"^2L",1,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c"]]]]],"^2T","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"~$c-value-changed?",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",442,"^2<",7,"^2=",442,"^2>",23,"^2?",["^2@",["^2A",["^2@",[["~$c","^3@","~$old-value"]]]]]],"^1M","~$tiltontec.cell.evaluate/c-value-changed?","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",23,"^2F",["^2@",[["~$c","^3@","^3F"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",442,"^2J","~$boolean","^2=",442,"^2L",3,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c","^3@","^3F"]]]]]],"~$propagate-to-callers",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",512,"^2<",7,"^2=",512,"^2>",27,"^2?",["^2@",["^2A",["^2@",[["~$c","^3;"]]]]]],"^1M","~$tiltontec.cell.evaluate/propagate-to-callers","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",27,"^2F",["^2@",[["~$c","^3;"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",512,"^2J",["^1L",[null,"^2K","^32","^2V"]],"^2=",512,"^2L",2,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c","^3;"]]]]]],"~$cget",["^ ","^28",null,"^29",["^ ","^2:","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2;",122,"^2<",7,"^2=",122,"^2>",11,"^2?",["^2@",["^2A",["^2@",[["~$c"]]]]],"^2T","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been watched."],"^1M","~$tiltontec.cell.evaluate/cget","^2:","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2>",11,"^2F",["^2@",[["~$c"]]],"^2G",null,"^2H",["^2@",[null,null]],"^2<",1,"^2I",false,"^2;",122,"^2J",["^1L",[null,"^2K","^32"]],"^2=",122,"^2L",1,"^2M",true,"^2?",["^2@",["^2A",["^2@",[["~$c"]]]]],"^2T","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been watched."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^1S","^1S","^N","^N","^B","^B"],"~:cljs.analyzer/constants",["^ ","~:seen",["^1L",["~:valid","~:optimized-away","~:awake","~:c-read","~:cells-flushed","~:cz","~:pre-rule-clear","~:ephemeral-reset","~:def-fall-thru!","~:dead","~:freeze","~:opti-used","~:else","~:unchanged-if","~:no-propagate","~:callee","~:uncurrent","~:quiesced","~:qself-fallthru","~:on-quiesce","~:default","~:c-awaken-def!!!","~:opti","~:c-awaken-fall-thru","~:propagate","~:nested","~:value","~:fn-c-awaken","~:nascent","~:not-optimized!!!!!!!!!!!","~:evic","~:ref-of","~:tiltontec.cell.base/c-formula","~:pulse-last-changed","~:tell-dependents","~:tiltontec.cell.base/state","~:prop","~:cnlink-raw-val","~:unref","~:new-vlue-installed","~:cva-entry","~:cnlink-fail-c","~:cget","~:tiltontec.cell.base/cell","~:quiesce","~:entry","~:noti-caller","~:when-value-t","~:cell-awaken","~:dead-c","~:once-asked","~:optimizing-away!!","~:me","~:cnlink-caught-exception","~:opti-away","~:post-cnlink-sees!!!!","~:propv-assume","~:valid-uninfluenced","~:always"]],"~:order",["^3X","^4Y","^4I","^4?","^4T","^4>","^4C","^41","^52","^3T","^4A","^4H","^3S","^4O","^50","^4;","^4B","^3W","^4Z","^4N","^4=","^4J","^49","^4:","^4<","^4D","^4K","^4P","^4U","^4E","^4@","^4M","^4L","^51","^4F","^3Q","^45","^43","^3U","^3[","^4X","^3R","^4[","^3V","^40","^48","^4Q","^4V","^47","^3Z","^3Y","^42","^4R","^4W","^53","^4G","^46","^4S","^44"]],"^2T",null]