["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$c-md-name","~$tiltontec.cell.base","~$cinfo","^4","~$set-ify","~$tiltontec.util.core","~$*quiesce*","^4","~$*unfinished-business*","^4","~$*pulse*","^4","~$c-input?","^4","~$c-synaptic?","^4","~$dependency-record","^4","~$c-value-state","^4","~$c-optimized-away?","^4","~$c-watch","~$tiltontec.cell.watch","~$c-debug?","^4","~$minfo","^4","~$c-current?","~$tiltontec.cell.integrity","~$cdbg","^4","~$dpc","^4","~$c-optimize","^4","~$*one-pulse?*","^4","~$c-valid?","^4","~$any-ref?","^7","~$unlink-from-used","^4","~$*causation*","^4","~$*defer-changes*","^4","~$unchanged-test","~$tiltontec.cell.poly","~$c-pulse","^4","~$wtrx","~$tiltontec.util.base","~$md-quiesce-self","^P","~$c-pulse-last-changed","^4","~$c-prop-name","^4","~$*dp-log*","^4","~$md-ref?","^4","~$rmap-meta-setf","^7","~$c-value","^4","~$*custom-propagator*","^4","~$c-awaken","^P","~$with-integrity","^E","~$mx-type","^S","~$c-pulse-unwatched?","^4","~$mdead?","^4","~$err","^7","~$c-callers","^4","~$c-ephemeral?","^4","~$c-ref?","^4","~$c-prop","^4","~$c-model","^4","~$md-prop-owning?","^4","~$c-async?","^4","~$dependency-drop","^4","~$c-rule","^4","~$unlink-from-callers","^4","~$c-code$","^4","~$mxtrc","~$tiltontec.cell.diagnostic","~$c-formula?","^4","~$c-me","^4","~$c-lazy","^4","~$difference","~$clojure.set","~$trx","^S","~$c-pulse-watched","^4","~$c-useds","^4","~$*call-stack*","^4","~$*c-prop-depth*","^4","~$c-pulse-update","^E","~$c-unbound?","^4","~$without-c-dependency","^4","~$*depender*","^4","~$rmap-setf","^7","~$prog1","^S","~$c-state","^4","~$md-quiesce","^P"],"~:excludes",["~#set",[]],"~:name","~$tiltontec.cell.evaluate","~:imports",null,"~:requires",["^ ","^4","^4","^7","^7","~$cty","^4","^1G","^1G","^A","^A","~$cljs.pprint","^20","^S","^S","^P","^P","^1B","^1B","^E","^E","~$str","~$clojure.string","^22","^22"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^3","^4","^5","^4","^6","^7","^8","^4","~$pprint","^20","^9","^4","^:","^4","^;","^4","^<","^4","^=","^4","^>","^4","^?","^4","^@","^A","^B","^4","^C","^4","^D","^E","^F","^4","^G","^4","^H","^4","^I","^4","^J","^4","^K","^7","^L","^4","^M","^4","^N","^4","^O","^P","^Q","^4","^T","^P","^U","^4","^V","^4","^W","^4","^X","^4","^Y","^7","^Z","^4","^[","^4","^10","^P","^12","^S","^13","^4","^14","^4","^15","^7","^16","^4","~$cl-format","^20","^17","^4","^18","^4","^19","^4","^1:","^4","^1;","^4","^1<","^4","^1=","^4","^1>","^4","^1?","^4","^1@","^4","^1A","^1B","^1C","^4","^1D","^4","^1E","^4","^1F","^1G","^1I","^4","^1J","^4","^1K","^4","^1L","^4","^1M","^E","^1N","^4","^1O","^4","^1P","^4","^1Q","^7","^1S","^4","^1T","^P"],"~:defs",["^ ","~$md-prop-value-store",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","~:line",313,"~:column",7,"~:end-line",313,"~:end-column",26,"~:arglists",["~#list",["~$quote",["^2A",[["~$me","~$prop","~$value"]]]]]],"^1W","~$tiltontec.cell.evaluate/md-prop-value-store","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",26,"~:method-params",["^2A",[["^2C","^2D","^2E"]]],"~:protocol-impl",null,"~:arglists-meta",["^2A",[null,null]],"^2=",1,"~:variadic?",false,"^2<",313,"~:ret-tag","~$any","^2>",313,"~:max-fixed-arity",3,"~:fn-var",true,"^2@",["^2A",["^2B",["^2A",[["^2C","^2D","^2E"]]]]]],"~$cget-value-as-is",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",126,"^2=",7,"^2>",126,"^2?",23,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]]],"^1W","~$tiltontec.cell.evaluate/cget-value-as-is","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",23,"^2G",["^2A",[["~$c"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",126,"^2K",["^1V",[null,"^2L"]],"^2>",126,"^2M",1,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]]],"~$md-prop-cell-flushed",["^ ","^1W","~$tiltontec.cell.evaluate/md-prop-cell-flushed","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",480,"^2=",1,"^2>",482,"^2?",23,"~:declared",true,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",482,"^2=",3,"^2>",482,"^2?",23,"^2S",true]],"~$calculate-and-set",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",179,"^2=",7,"^2>",179,"^2?",24,"^2@",["^2A",["^2B",["^2A",[["~$c","~$dbgid","~$dbgdata"]]]]],"~:doc","Calculate, link, record, and propagate."],"^1W","~$tiltontec.cell.evaluate/calculate-and-set","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",24,"^2G",["^2A",[["~$c","^2U","^2V"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",179,"^2K",["^1V",["^2L","~$clj-nil"]],"^2>",179,"^2M",3,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c","^2U","^2V"]]]]],"^2W","Calculate, link, record, and propagate."],"~$c-quiesce",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",445,"^2=",7,"^2>",445,"^2?",16,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]]],"^1W","~$tiltontec.cell.evaluate/c-quiesce","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",16,"^2G",["^2A",[["~$c"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",445,"^2K",["^1V",[null,"^2L"]],"^2>",445,"^2M",1,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]]],"~$c-absorb-value",["^ ","^1W","~$tiltontec.cell.evaluate/c-absorb-value","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",308,"^2=",1,"^2>",308,"^2?",24,"^2S",true,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",308,"^2=",10,"^2>",308,"^2?",24,"^2S",true]],"~$ephemeral-reset",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",39,"^2=",7,"^2>",39,"^2?",22,"^2@",["^2A",["^2B",["^2A",[["~$rc"]]]]]],"^1W","~$tiltontec.cell.evaluate/ephemeral-reset","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",22,"^2G",["^2A",[["^33"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",39,"^2K",["^1V",[null,"^2L","~$cljs.core/Keyword","^2Y"]],"^2>",39,"^2M",1,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["^33"]]]]]],"~$optimize-away?!",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",404,"^2=",7,"^2>",404,"^2?",22,"^2@",["^2A",["^2B",["^2A",[["~$c","~$prior-value"]]]]],"^2W","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a prop and Just Use It."],"^1W","~$tiltontec.cell.evaluate/optimize-away?!","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",22,"^2G",["^2A",[["~$c","^37"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",404,"^2K",["^1V",[null,"^2L","^2Y"]],"^2>",404,"^2M",2,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c","^37"]]]]],"^2W","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a prop and Just Use It."],"~$ensure-value-is-current",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",58,"^2=",7,"^2>",58,"^2?",30,"^2@",["^2A",["^2B",["^2A",[["~$c","~$debug-id","~$ensurer"]]]]],"^2W","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"^1W","~$tiltontec.cell.evaluate/ensure-value-is-current","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",30,"^2G",["^2A",[["~$c","^3:","^3;"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",58,"^2K",["^1V",["^2L","^2Y"]],"^2>",58,"^2M",3,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c","^3:","^3;"]]]]],"^2W","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"~$propagate",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",484,"^2=",7,"^2>",484,"^2?",16,"^2@",["^2A",["^2B",["^2A",[["~$c","^37","~$callers"]]]]],"^2W","A cell:\n  - notifies its callers of its change;\n  - calls any watch; and\n  - if ephemeral, silently reverts to nil."],"^1W","~$tiltontec.cell.evaluate/propagate","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",16,"^2G",["^2A",[["~$c","^37","^3>"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",484,"^2K",["^1V",[null,"^2L","^2Y"]],"^2>",484,"^2M",3,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c","^37","^3>"]]]]],"^2W","A cell:\n  - notifies its callers of its change;\n  - calls any watch; and\n  - if ephemeral, silently reverts to nil."],"~$md-cell-flush",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",392,"^2=",7,"^2>",392,"^2?",20,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]]],"^1W","~$tiltontec.cell.evaluate/md-cell-flush","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",20,"^2G",["^2A",[["~$c"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",392,"^2K",["^1V",["^2L","^2Y"]],"^2>",392,"^2M",1,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]]],"~$c-value-assume",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",319,"^2=",7,"^2>",319,"^2?",21,"^2@",["^2A",["^2B",["^2A",[["~$c","~$new-value","~$propagation-code"]]]]],"^2W","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"^1W","~$tiltontec.cell.evaluate/c-value-assume","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",21,"^2G",["^2A",[["~$c","^3C","^3D"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",319,"^2>",319,"^2M",3,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c","^3C","^3D"]]]]],"^2W","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"~$calculate-and-link",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",227,"^2=",7,"^2>",227,"^2?",25,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]],"^2W","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"^1W","~$tiltontec.cell.evaluate/calculate-and-link","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",25,"^2G",["^2A",[["~$c"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",227,"^2>",227,"^2M",1,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]],"^2W","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"~$c-value-changed?",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",473,"^2=",7,"^2>",473,"^2?",23,"^2@",["^2A",["^2B",["^2A",[["~$c","^3C","~$old-value"]]]]]],"^1W","~$tiltontec.cell.evaluate/c-value-changed?","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",23,"^2G",["^2A",[["~$c","^3C","^3I"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",473,"^2K","~$boolean","^2>",473,"^2M",3,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c","^3C","^3I"]]]]]],"~$propagate-to-callers",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",543,"^2=",7,"^2>",543,"^2?",27,"^2@",["^2A",["^2B",["^2A",[["~$c","^3>"]]]]]],"^1W","~$tiltontec.cell.evaluate/propagate-to-callers","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",27,"^2G",["^2A",[["~$c","^3>"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",543,"^2K",["^1V",[null,"^2L","^35","^2Y"]],"^2>",543,"^2M",2,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c","^3>"]]]]]],"~$cget",["^ ","^29",null,"^2:",["^ ","^2;","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",134,"^2=",7,"^2>",134,"^2?",11,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]],"^2W","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been watched."],"^1W","~$tiltontec.cell.evaluate/cget","^2;","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2?",11,"^2G",["^2A",[["~$c"]]],"^2H",null,"^2I",["^2A",[null,null]],"^2=",1,"^2J",false,"^2<",134,"^2K",["^1V",[null,"^2L","^35"]],"^2>",134,"^2M",1,"^2N",true,"^2@",["^2A",["^2B",["^2A",[["~$c"]]]]],"^2W","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been watched."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^20","^20","^S","^S","^E","^E"],"~:cljs.analyzer/constants",["^ ","~:seen",["^1V",["~:valid","~:optimized-away","~:cget-returns!!!!!!","~:cva-calls-propagate","~:awake","~:c-read","~:cells-flushed","~:cz","~:pre-rule-clear","^2:","~:ephemeral-reset","~:def-fall-thru!","~:dead","~:freeze","~:opti-used","~:ci-was","~:else","~:post-opti-c!!!!!!!!!","~:unchanged-if","~:no-propagate","~:callee","~:cget-ev!!!!!!!!!!!","~:uncurrent","~:just-pulse-valid-uninfluenced","~:quiesced","~:qself-fallthru","~:on-quiesce","~:default","~:c-awaken-def!!!","~:evic-flushed-returns","~:opti","~:c-awaken-fall-thru","~:propagate","~:resetting-cell-to-val!!!","~:nested","~:value","~:mx-type","~:md-cell-flush","~:metamxty","~:val","~:ci","~:fn-c-awaken","~:mi","~:nascent","~:mxty","~:not-optimized!!!!!!!!!!!","~:cref","~:evic-uncurrent-returns","~:not-calc","~:evic","~:ref-of","~:tiltontec.cell.base/c-formula","~:pulse-last-changed","~:tell-dependents","~:tiltontec.cell.base/state","~:pulse","~:prop","~:cnlink-raw-val","~:unref","~:new-vlue-installed","~:cva-entry","~:cnlink-fail-c","~:cget","~:post-flush-c!!!!!!!!!","~:evic-sees-uncurrent","~:tiltontec.cell.base/cell","~:quiesce","~:entry","~:noti-caller","~:when-value-t","~:cell-awaken","~:post-opti-c!!!!!!!!!-at-ceee","~:dead-c","~:cinfo","~:once-asked","~:optimizing-away!!","~:me","~:cnlink-caught-exception","~:opti-away","~:cget-post-evic-val","~:post-cnlink-sees!!!!","~:cget-sees-integ","~:cget-core","~:propv-assume","~:typec","~:sth-happened","~:valid-uninfluenced","~:always","~:optimized-c-runs-caller","~:evic-uncurrent-cee!!!"]],"~:ordernull]