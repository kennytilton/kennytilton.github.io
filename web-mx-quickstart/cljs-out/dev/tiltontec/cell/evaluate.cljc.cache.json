["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$c-md-name","~$tiltontec.cell.base","~$cinfo","^4","~$set-ify","~$tiltontec.util.core","~$*quiesce*","^4","~$*unfinished-business*","^4","~$*pulse*","^4","~$c-input?","^4","~$c-synaptic?","^4","~$dependency-record","^4","~$pcell","^4","~$c-value-state","^4","~$c-optimized-away?","^4","~$minfo","^4","~$c-current?","~$tiltontec.cell.integrity","~$dpc","^4","~$c-optimize","^4","~$*one-pulse?*","^4","~$c-valid?","^4","~$any-ref?","^7","~$unlink-from-used","^4","~$*causation*","^4","~$*defer-changes*","^4","~$c-pulse","^4","~$wtrx","~$tiltontec.util.base","~$c-pulse-last-changed","^4","~$c-prop-name","^4","~$*dp-log*","^4","~$md-ref?","^4","~$rmap-meta-setf","^7","~$c-value","^4","~$*custom-propagator*","^4","~$with-integrity","^C","~$mx-type","^N","~$c-pulse-unwatched?","^4","~$mdead?","^4","~$err","^7","~$c-callers","^4","~$c-ephemeral?","^4","~$c-ref?","^4","~$c-prop","^4","~$c-model","^4","~$md-prop-owning?","^4","~$c-async?","^4","~$dependency-drop","^4","~$c-rule","^4","~$unlink-from-callers","^4","~$c-code$","^4","~$c-formula?","^4","~$c-me","^4","~$c-lazy","^4","~$difference","~$clojure.set","~$trx","^N","~$c-pulse-watched","^4","~$c-useds","^4","~$*call-stack*","^4","~$*c-prop-depth*","^4","~$c-pulse-update","^C","~$c-unbound?","^4","~$without-c-dependency","^4","~$*depender*","^4","~$rmap-setf","^7","~$prog1","^N","~$c-state","^4"],"~:excludes",["~#set",[]],"~:name","~$tiltontec.cell.evaluate","~:imports",null,"~:requires",["^ ","^4","^4","^7","^7","~$cty","^4","^1>","^1>","~$tiltontec.cell.watch","^1R","~$cljs.pprint","^1S","^N","^N","~$tiltontec.cell.poly","^1T","^C","^C","~$str","~$clojure.string","^1V","^1V"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^3","^4","^5","^4","^6","^7","^8","^4","~$pprint","^1S","^9","^4","^:","^4","^;","^4","^<","^4","^=","^4","^?","^4","^@","^4","~$c-watch","^1R","^A","^4","^B","^C","^D","^4","^E","^4","^F","^4","^G","^4","^H","^7","^I","^4","^J","^4","^K","^4","~$unchanged-test","^1T","^L","^4","~$md-quiesce-self","^1T","^O","^4","^P","^4","^Q","^4","^R","^4","^S","^7","^T","^4","^U","^4","~$c-awaken","^1T","^W","^N","^X","^4","^Y","^4","^Z","^7","^[","^4","~$cl-format","^1S","^10","^4","^11","^4","^12","^4","^13","^4","^14","^4","^15","^4","^16","^4","^17","^4","^18","^4","^19","^4","^1:","^4","^1;","^4","^1<","^4","^1=","^1>","^1@","^4","^1A","^4","^1B","^4","^1C","^4","^1D","^C","^1E","^4","^1G","^4","^1H","^7","^1J","^4","~$md-quiesce","^1T"],"~:defs",["^ ","~$md-prop-value-store",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","~:line",288,"~:column",7,"~:end-line",288,"~:end-column",26,"~:arglists",["~#list",["~$quote",["^2>",[["~$me","~$prop","~$value"]]]]]],"^1M","~$tiltontec.cell.evaluate/md-prop-value-store","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",26,"~:method-params",["^2>",[["^2@","^2A","^2B"]]],"~:protocol-impl",null,"~:arglists-meta",["^2>",[null,null]],"^2:",1,"~:variadic?",false,"^29",288,"~:ret-tag","~$any","^2;",288,"~:max-fixed-arity",3,"~:fn-var",true,"^2=",["^2>",["^2?",["^2>",[["^2@","^2A","^2B"]]]]]],"~$md-prop-cell-flushed",["^ ","^1M","~$tiltontec.cell.evaluate/md-prop-cell-flushed","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",437,"^2:",1,"^2;",439,"^2<",23,"~:declared",true,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",439,"^2:",3,"^2;",439,"^2<",23,"^2N",true]],"~$calculate-and-set",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",163,"^2:",7,"^2;",163,"^2<",24,"^2=",["^2>",["^2?",["^2>",[["~$c","~$dbgid","~$dbgdata"]]]]],"~:doc","Calculate, link, record, and propagate."],"^1M","~$tiltontec.cell.evaluate/calculate-and-set","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",24,"^2D",["^2>",[["~$c","^2P","^2Q"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",163,"^2H",["^1L",["^2I","~$clj-nil"]],"^2;",163,"^2J",3,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c","^2P","^2Q"]]]]],"^2R","Calculate, link, record, and propagate."],"~$c-quiesce",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",404,"^2:",7,"^2;",404,"^2<",16,"^2=",["^2>",["^2?",["^2>",[["~$c"]]]]]],"^1M","~$tiltontec.cell.evaluate/c-quiesce","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",16,"^2D",["^2>",[["~$c"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",404,"^2H",["^1L",[null,"^2I"]],"^2;",404,"^2J",1,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c"]]]]]],"~$c-absorb-value",["^ ","^1M","~$tiltontec.cell.evaluate/c-absorb-value","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",283,"^2:",1,"^2;",283,"^2<",24,"^2N",true,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",283,"^2:",10,"^2;",283,"^2<",24,"^2N",true]],"~$ephemeral-reset",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",40,"^2:",7,"^2;",40,"^2<",22,"^2=",["^2>",["^2?",["^2>",[["~$rc"]]]]]],"^1M","~$tiltontec.cell.evaluate/ephemeral-reset","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",22,"^2D",["^2>",[["^2Z"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",40,"^2H",["^1L",[null,"^2I","~$cljs.core/Keyword","^2T"]],"^2;",40,"^2J",1,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["^2Z"]]]]]],"~$optimize-away?!",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",368,"^2:",7,"^2;",368,"^2<",22,"^2=",["^2>",["^2?",["^2>",[["~$c","~$prior-value"]]]]],"^2R","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a prop and Just Use It."],"^1M","~$tiltontec.cell.evaluate/optimize-away?!","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",22,"^2D",["^2>",[["~$c","^32"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",368,"^2H",["^1L",[null,"^2I","^2T"]],"^2;",368,"^2J",2,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c","^32"]]]]],"^2R","Optimizes away cells who turn out not to depend on anyone, \n  saving a lot of work at runtime. A caller/user will not bother\n  establishing a link, and when we get to models cget will \n  find a non-cell in a prop and Just Use It."],"~$ensure-value-is-current",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",59,"^2:",7,"^2;",59,"^2<",30,"^2=",["^2>",["^2?",["^2>",[["~$c","~$debug-id","~$ensurer"]]]]],"^2R","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"^1M","~$tiltontec.cell.evaluate/ensure-value-is-current","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",30,"^2D",["^2>",[["~$c","^35","^36"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",59,"^2H",["^1L",["^2I","^2T"]],"^2;",59,"^2J",3,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c","^35","^36"]]]]],"^2R","The key to data integrity: recursively check the known dependency\n  graph to decide if we are current, and if not kick off recalculation\n  and propagation."],"~$propagate",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",441,"^2:",7,"^2;",441,"^2<",16,"^2=",["^2>",["^2?",["^2>",[["~$c","^32","~$callers"]]]]],"^2R","A cell:\n  - notifies its callers of its change;\n  - calls any watch; and\n  - if ephemeral, silently reverts to nil."],"^1M","~$tiltontec.cell.evaluate/propagate","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",16,"^2D",["^2>",[["~$c","^32","^39"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",441,"^2H",["^1L",[null,"^2I","^2T"]],"^2;",441,"^2J",3,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c","^32","^39"]]]]],"^2R","A cell:\n  - notifies its callers of its change;\n  - calls any watch; and\n  - if ephemeral, silently reverts to nil."],"~$md-cell-flush",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",357,"^2:",7,"^2;",357,"^2<",20,"^2=",["^2>",["^2?",["^2>",[["~$c"]]]]]],"^1M","~$tiltontec.cell.evaluate/md-cell-flush","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",20,"^2D",["^2>",[["~$c"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",357,"^2H",["^1L",["^2I","^2T"]],"^2;",357,"^2J",1,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c"]]]]]],"~$c-value-assume",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",294,"^2:",7,"^2;",294,"^2<",21,"^2=",["^2>",["^2?",["^2>",[["~$c","~$new-value","~$propagation-code"]]]]],"^2R","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"^1M","~$tiltontec.cell.evaluate/c-value-assume","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",21,"^2D",["^2>",[["~$c","^3>","^3?"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",294,"^2;",294,"^2J",3,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c","^3>","^3?"]]]]],"^2R","The Cell assumes a new value at awakening, on c-reset!, or\n   after formula recalculation.\n\n  We record the new value, set the Cell state to :awake, make\n  its pulse current, check to see if a formula cell can be\n  optimized away, and then propagate to any dependent formula\n  cells."],"~$calculate-and-link",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",210,"^2:",7,"^2;",210,"^2<",25,"^2=",["^2>",["^2?",["^2>",[["~$c"]]]]],"^2R","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"^1M","~$tiltontec.cell.evaluate/calculate-and-link","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",25,"^2D",["^2>",[["~$c"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",210,"^2;",210,"^2J",1,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c"]]]]],"^2R","The name is accurate: we do no more than invoke the\n  rule of a formula and return its value*, but along the\n  way the links between dependencies and dependents get\n  determined anew.\n\n  * Well, we also look to see if a synaptic cell has attached a\n  propagaion code to a vector used to wrap the raw value, which we then unpack."],"~$c-value-changed?",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",430,"^2:",7,"^2;",430,"^2<",23,"^2=",["^2>",["^2?",["^2>",[["~$c","^3>","~$old-value"]]]]]],"^1M","~$tiltontec.cell.evaluate/c-value-changed?","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",23,"^2D",["^2>",[["~$c","^3>","^3D"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",430,"^2H","~$boolean","^2;",430,"^2J",3,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c","^3>","^3D"]]]]]],"~$propagate-to-callers",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",499,"^2:",7,"^2;",499,"^2<",27,"^2=",["^2>",["^2?",["^2>",[["~$c","^39"]]]]]],"^1M","~$tiltontec.cell.evaluate/propagate-to-callers","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",27,"^2D",["^2>",[["~$c","^39"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",499,"^2H",["^1L",[null,"^2I","^30","^2T"]],"^2;",499,"^2J",2,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c","^39"]]]]]],"~$cget",["^ ","^26",null,"^27",["^ ","^28","/Users/kennethtilton/dev/kennytilton.github.io/web-mx-quickstart/resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^29",123,"^2:",7,"^2;",123,"^2<",11,"^2=",["^2>",["^2?",["^2>",[["~$c"]]]]],"^2R","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been watched."],"^1M","~$tiltontec.cell.evaluate/cget","^28","resources/public/cljs-out/dev/tiltontec/cell/evaluate.cljc","^2<",11,"^2D",["^2>",[["~$c"]]],"^2E",null,"^2F",["^2>",[null,null]],"^2:",1,"^2G",false,"^29",123,"^2H",["^1L",[null,"^2I","^30"]],"^2;",123,"^2J",1,"^2K",true,"^2=",["^2>",["^2?",["^2>",[["~$c"]]]]],"^2R","The API for determing the value associated with a Cell.\n  Ensures value is current, records any dependent, and\n  notices if a standalone  cell has never been watched."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^1S","^1S","^N","^N","^1Q","^4","^4","^4","^C","^C"],"~:cljs.analyzer/constants",["^ ","~:seen",["^1L",["~:valid","~:optimized-away","~:awake","~:c-read","~:cells-flushed","~:cz","~:pre-rule-clear","~:ephemeral-reset","~:dead","~:freeze","~:opti-used","~:else","~:unchanged-if","~:no-propagate","~:uncurrent","~:quiesced","~:on-quiesce","~:default","~:c-awaken-def!!!","~:c-awaken-fall-thru","~:propagate","~:nested","~:value","~:fn-c-awaken","~:nascent","~:evic","~:ref-of","~:tiltontec.cell.base/c-formula","~:pulse-last-changed","~:tell-dependents","~:tiltontec.cell.base/state","~:prop","~:unref","~:cget","~:tiltontec.cell.base/cell","~:quiesce","~:when-value-t","~:cell-awaken","~:dead-c","~:once-asked","~:me","~:opti-away","~:propv-assume","~:valid-uninfluenced","~:always"]],"~:order",["^3V","^4K","^4B","^49","^4G","^48","^4<","^3Z","^4N","^3R","^4;","^4A","^3Q","^4D","^3U","^47","^44","^45","^46","^4=","^4C","^4E","^4H","^4>","^4:","^4M","^4?","^3O","^41","^40","^3S","^3X","^3P","^4L","^3T","^3Y","^43","^4F","^4I","^3W","^3[","^4J","^4O","^4@","^42"]],"^2R",null]