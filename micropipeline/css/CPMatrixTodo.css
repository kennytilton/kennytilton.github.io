.caution {
    background: #ff0;
    padding: 4px;
    border: 1px dashed #c5c5c5;
}

code {
    background: beige;
    padding: 1em;
}

.precode {
    font-family: 'Source Code Pro', monospace;
    background: #fcfcfc;
    border: 2px inset #aaa;
    padding: 1em;
    margin-right: 48px;
}

.precode i {
    /*background:#FaFaDd;*/
    color:blue;
}
.precode b {
    /*background:#FaFaDd;*/
    color:#003300;
    padding: 2px;
}
.precode strong {
    /*background:#FaFaDd;*/
    color:red;
    padding: 2px;
}

.techwrite {
    font-family: 'Source Sans Pro', sans-serif;
}

.narrativecol {
    flex: 30%;
    max-width: 300px;
    padding-left: 12px;
    padding-right: 12px;
}

/*html { overflow-y: scroll; }*/
html { margin-left: calc(100vw - 100%); }

.techtitular {
    /*font-family: 'Cabin', sans-serif;*/

    font-family: 'Lora', serif;

}
.techtitle {
    /*text-align:center;*/
    font-size:40px;
}

.techsubtitle {
    text-align:left;
    font-size:24px;
}

.techheader {
    text-align:left;
    font-size:18px;

    /*font-family: 'Cabin', sans-serif;*/
    font-family: 'Source Sans Pro', sans-serif;
    /*font-family: 'Lora', serif;*/
}
/*
First, a utility:
    function todoMatchesFilter( td, filter ) {
        return filter==="All"
            || (filter==="Active" && !td.completed)
            || (filter==="Completed" && td.completed);
    }

Now two solutions. The first selects which To-dos become LIs, so DOM actually
comes and goes. Change the UL kidValues formula in the 'yourturn' bit to be this:

        kidValues: cF(c => {
                        let f = fmK(c.md, "filters").selection;
                        return Todos.items.filter(td=>todoMatchesFilter(td, f));
                    })


The second solution adds/removes the hidden attribute selectively. Make this the first
parameter to the function TodoLI (in the 'yourturn' bit):
    {hidden: cF( c=> !todoMatchesFilter( td, fmK(c.md, "filters").selection))}


 */